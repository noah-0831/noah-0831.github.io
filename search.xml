<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>關於 Codebar 程式酒吧</title>
    <url>/%E9%97%9C%E6%96%BC%20Codebar/</url>
    <content><![CDATA[<p>2022年，因為體認到網路上針對C語系初學者的程式題目學習資源不足，我開始撰寫一份以初學者角度剖析題意，釐清解題思路，並轉化為程式碼的解題報告－<a href="https://hackmd.io/@Noah0831/BJzhp16Di"><strong>初學者也適用的ZeroJudge C語言詳解</strong></a>，但我並不滿足於此。</p>
<p>為了提供讀者更充實、更具系統性的學習網站，在歷時兩年的籌備後，2024年， <strong>Codebar 程式酒吧</strong> 正式成立了。我們專注於分享 <strong>程式</strong> 、 <strong>升學</strong> 與 <strong>活動</strong> 的相關知識與經驗，期許打造出如同酒吧一般開放的環境，讓讀者們可以針對自己感興趣的主題，依照自己的步調吸收與學習。我們相信，藉由 Codebar 程式酒吧 文章式的分享，總有一天，學習會像是在酒吧一樣，如此的輕鬆而自由。</p>
]]></content>
      <categories>
        <category>關於 Codebar 程式酒吧</category>
      </categories>
  </entry>
  <entry>
    <title>調酒日記 那些基酒以外的副材料</title>
    <url>/%E8%AA%BF%E9%85%92%E6%97%A5%E8%A8%98%EF%BC%8D%E9%82%A3%E4%BA%9B%E5%9F%BA%E9%85%92%E4%BB%A5%E5%A4%96%E7%9A%84%E8%AA%BF%E9%85%92%E6%9D%90%E6%96%99/</url>
    <content><![CDATA[<p>相信大家再看完上一篇的調酒日記後，應該都能區分釀造酒與蒸餾酒的不同，也對調酒的核心材料<a href="">六大基酒</a>有了初步的認識。不過在上次結尾我們也曾提過，儘管六大基酒確實是調酒的核心材料，但在這之外還有許多不同的材料，其中有些可能會讓你大開眼界喔！那麼今天，我們就來向大家介紹幾種在六大基酒以外，常見的調酒材料吧！</p>
<span id="more"></span>

<h2 id="其他酒類"><a href="#其他酒類" class="headerlink" title="其他酒類"></a>其他酒類</h2><p>世上的酒種千千萬萬，當然不只六大基酒了。像是利口酒、橙酒，雖然不屬於六大基酒，卻也名列基酒之中。除了基酒以外，其他酒類如苦艾酒、氣泡酒等，也被運用在許多經典調酒上。當然，這裡還是要再一次建議，新手要練習調酒的話，可以優先選擇六大基酒，尤其是伏特加、琴酒和蘭姆，其他酒類則是依個人需求自行決定是否入手。</p>
<h2 id="冰塊"><a href="#冰塊" class="headerlink" title="冰塊"></a>冰塊</h2><p>可能有人覺得將冰塊單獨拉出來講很多餘，但他確實在調酒中佔有舉足輕重的地位。不只是有或沒有的差別而已，要加多少、什麼時候加，要怎麼加背後都有許多需要注意的細節。關鍵在於冰塊融化後會變成水，會改變酒的濃度，進而改變調酒的風味。這是一個動態的過程，專業的調酒師可以藉由對冰塊的控制，讓調酒在適當的時機散發恰到好處的香氣與風味。舉例來說，像威士忌的香氣會在加水的同時展開，因此威士忌常常會加入大冰，隨著冰塊融化讓香氣逐漸展開。</p>
<h2 id="各類果汁"><a href="#各類果汁" class="headerlink" title="各類果汁"></a>各類果汁</h2><p>除了酒本身以外，許多果汁也會被運用在調酒上。當然，這裡的果汁並不是市面上常見的罐裝果汁，而是新鮮現榨的天然水果原汁。雖然做工是複雜了些，成本也不算便宜，但不同果汁的香氣，正好可以根據調酒的調性與使用酒種的風味做搭配，提供飲用者客製化的需求。</p>
<p>其中最常用到的就是檸檬汁，其酸味可以減輕調酒減輕調酒的酒感，帶來更加清爽的體驗。一般來說檸檬產季在夏秋，因此此時的檸檬品質要比冬春之際還好，包括汁液通常也較多。在擠檸檬汁之前，可以先將檸檬搓揉過以增加汁液，接著將頭尾去除，去皮去籽後榨汁。除了檸檬汁以外，萊姆汁（和檸檬不同喔！）、鳳梨汁、香蕉汁、洛神花汁等等都有運用在調酒上的例子，關鍵還是在於調酒師自己的選擇。</p>
<h2 id="氣泡水"><a href="#氣泡水" class="headerlink" title="氣泡水"></a>氣泡水</h2><p>如果說味道方面可以用果汁調味，口感的話我們常用的選擇就屬氣泡水了。我們調酒社裡有一句話：「加氣泡水的調酒都不會難喝」，單單是加入氣泡水，就能讓調酒展現出截然不同的面貌。像是經典調酒琴通寧 Gin Tonic，其成分其實就是琴酒加上氣泡水，歷時數代仍歷久不衰。</p>
<h2 id="苦精"><a href="#苦精" class="headerlink" title="苦精"></a><a href="https://www.google.com/search?q=%E6%9F%A5%E7%9C%8B%E5%87%BD%E6%95%B8+ltspiece&oq=%E6%9F%A5%E7%9C%8B%E5%87%BD%E6%95%B8+ltspiece&gs_lcrp=EgZjaHJvbWUyBggAEEUYOTIGCAEQLhhA0gEJMTA0MTlqMGoxqAIAsAIA&sourceid=chrome&ie=UTF-8">苦精</a></h2><p>苦精雖然名字中有個「苦」字，但他的種類多樣，其實未必是苦的。準確來說，苦精是一種濃縮的藥草烈酒，因為濃度極高，只需幾滴即可改瑱調酒的風味，很考驗調酒師對於份量的掌控。如果你也曾去過酒吧，或許就有機會在吧檯上發現小小一瓶、不仔細看有點像是香精或是調味料的苦精身影。坦白說，新手其實不是很需要用到像苦精這種高濃度的濃縮酒，但知道一下總是好的，深入調酒領域後說不定就會用到了呢～</p>
<p>當然，實際上可用在調酒上的材料還遠遠不止這些，畢竟調酒的種類琳瑯滿目，不同的調酒多少會有一些獨特的材料。舉凡自由古巴 Cuba Libre 就用到了可樂，咖啡馬丁尼 Espresso Martini 還加了咖啡。這些都是實際學到以後才會發現的事情！</p>
]]></content>
      <categories>
        <category>調酒日記</category>
      </categories>
  </entry>
  <entry>
    <title>喵客學院-彰化高中的Python程式教學之旅</title>
    <url>/%E5%96%B5%E5%AE%A2%E5%AD%B8%E9%99%A2-%E5%BD%B0%E5%8C%96%E9%AB%98%E4%B8%AD%E7%9A%84Python%E7%A8%8B%E5%BC%8F%E6%95%99%E5%AD%B8%E4%B9%8B%E6%97%85/</url>
    <content><![CDATA[<p>　　首先，還是想感謝留宿計畫這樣的契機，給予我們團隊成員坐下來討論潛藏許久的構想，並付諸實現的機會。當然更要感謝全體夥伴，少了你們任何一位的參與，喵客學院的程式教育之路都不可能化為現實。</p>
<p>　　正如我們之前所說，雖然喵客學院是在今年正式啟動，但早在幾年前，我們團隊的成員就有過類似的發想，甚至已經轉化為具體行動。以我個人的經驗為例，最早的構思可以追溯到兩年前。當時高三的我，在沒有任何基礎的情況下，僅憑著對程式的熱忱，毅然投入了進階程式設計課程。從最初的自信，到成長路上的挫折與迷惘，我深刻體會到初學者載浮於茫茫學海之中的無力感。也因此在程式能力漸趨成熟後，開始著手撰寫一份以新手角度剖析題意，釐清解題思路，並轉化為程式碼的解題報告，甚至在去年正式創建部落格品牌，系統化經營程式教學部落格。但當然，只有一個人的力量還遠遠不足。因此，當我們發現彼此都有著同樣的目標，同樣永不放棄的天真時，我們開始思考：</p>
<p>　　「我們能不能做些什麼，真正改變這個世界？」</p>
<p>　　而喵客學院，就是我們給予世界的答覆。</p>
<span id="more"></span>

<p>　　因為無法忘記自己在學習路上遇到的種種挫折，更無法坐視非都市型學校的學生正因為教育資源分布不均，而喪失可能改變一生的機會。四個人，用了三個月的時間，從經營社群媒體，到籌畫工作坊，再到前往非都市型學校舉辦營隊。一步步走出屬於我們的路，為眾多學子們開創了無限可能。</p>
<p>　　還記得第一次到彰化高中場勘的時候，我還天真地以為可以搭乘高鐵直達。直到實地走訪後，才知道高鐵根本沒進入彰化市區，客運站也被深夜返家的學生們擠得水洩不通。當晚，我們是搭UBER到達下榻地點的，光是車程就花了30多分鐘。看著沿路沉沒在漆黑之中的田野，我第一次意識到自己的生活圈有多狹隘。原來，所謂的偏鄉，並不局限於山林荒野之間，視線難以企及之處。我們所認知的開發地區，也有開車一個小時才能到達的學校，有需要清晨六點出門的學生。給他們一個學習的機會，是我們的使命，也是不變的堅持。</p>
<p>　　在營隊期間，很榮幸能擔任助教的角色，從旁協助他們成長。看著他們第一次接觸語法時的生澀，也不禁想起曾是初學者的那段時光。為了幫助他們快速理解，我喜歡用比喻的方式具象化說明抽象的程式語意，再逐行講解語法。這樣的教學過程，就彷彿在和過去的自己對話一般，在跨越時空的對話之下教學相長。不只專業能力的進步，在一次次與夥伴和學員互動的過程中，我也更加了解如何和人溝通與交流。儘管成長的過程難免辛苦，但看到學員們因為掌握所學的成就感而露出的笑容，尤其是沉浸在課程體驗，甚至會與同儕一同討論與競賽的瞬間，一切的努力都值得了。因為我們知道，我們已經點亮學員們心中的花火，那是足以改變人生的力量。</p>
<p>　　在可預見的未來，我們對於喵客學院的投入與堅持仍會持續下去。事實上，除了長期的社群經營之外，營隊方面目前我們已經接獲家齊高中的邀請，經小組討論後預計將在下學期前往開設，不過細節還需要進一步和校方討論。工作坊的部分，我們已經完成課程的準備，包含招生文案與表單也已經就位，目前規畫分成3階段在下學期舉辦，期望拉開間隔後能吸引到更多人共襄盛舉。</p>
<p>　　回看這一路走來，有歡笑，也有淚水。但我們並不害怕失敗，也從不為付出的心血後悔。因為我們很清楚，喵客學院的經營之路，現在才剛開始。</p>
<p>　　「夢想這條路踏上了，跪著也要走完。」</p>
]]></content>
      <categories>
        <category>活動經驗</category>
      </categories>
      <tags>
        <tag>喵客學院</tag>
      </tags>
  </entry>
  <entry>
    <title>a248. 新手訓練 ~ 陣列應用</title>
    <url>/a248-%E6%96%B0%E6%89%8B%E8%A8%93%E7%B7%B4-%E9%99%A3%E5%88%97%E6%87%89%E7%94%A8/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a248">https://zerojudge.tw/ShowProblem?problemid=a248</a></p>
<h2 id="建議類題"><a href="#建議類題" class="headerlink" title="建議類題"></a>建議類題</h2><p><a href="https://hackmd.io/DwmkclCaTUOO48NYFW8AHw?view#a240-117%E5%B0%8F%E6%95%B8%E7%AC%AC-n-%E4%BD%8D">a240. 1&#x2F;17小數第 n 位</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>根據題意，本題希望我們將輸入進行除法運算後，輸出商數到小數點後第10000位。由於10000位明顯超出任何資料型態的變數的儲存範圍，因此我們可以換個想法，改用陣列將每一位數依序存入，最後只要輸出陣列即可。具體的做法是模擬直式除法，將運算過程拆成一位一位來看，每次都先將現在的數字乘上10倍作被除數，取商數後將其存進陣列中，再將餘令為新的被除數，直到存滿10000位為止。</p>
<span id="more"></span>

<p>舉1除以17為例，我們先將1乘以10變10，10除以17得0，因此1除以17的小數點後第一位即為0。接者我們再將10乘以10變100作新的被除數，100除以17得5，即為1除以17的小數點後第二位。接著我們將100減去17乘5後得15，再乘以10就會是新的被除數150，以此類推。</p>
<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>根據題意，測資檔會包含多組測資，因此需使用「<a href="https://noah-0831.github.io/a004-%E6%96%87%E6%96%87%E7%9A%84%E6%B1%82%E5%A9%9A/">EOF</a>寫法」。所謂 EOF 並不是一種真實存在的字元，而是「End Of File」的縮寫，意思是一份檔案的結尾，也可以說是輸入的停止。通常程式在執行時會先讀取輸入，再依據輸入進行相對的行動，但我們未必能知道輸入有幾筆、到什麼時候結束，這時候我們就可以讓電腦自動偵測。一旦它偵測到EOF條件為True，即代表輸入停止，就會結束讀取輸入，如此我們的程式就不用事先指定輸入的筆數，可以不斷讀取輸入並執行直到輸入結束。</p>
<h2 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a>程式碼</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a, b, N;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;a, &amp;b, &amp;N)!=EOF) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d.&quot;</span>, a/b);</span><br><span class="line">        a%=b;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> ans[N];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;N;i++) &#123;</span><br><span class="line">            a*=<span class="number">10</span>;</span><br><span class="line">            ans[i]=a/b;</span><br><span class="line">            a-=ans[i]*b;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, ans[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>AI世代的生存哲學-我在AI EXPO看到的未來</title>
    <url>/AI%E4%B8%96%E4%BB%A3%E7%9A%84%E7%94%9F%E5%AD%98%E5%93%B2%E5%AD%B8-%E6%88%91%E5%9C%A8AI%20EXPO%E7%9C%8B%E5%88%B0%E7%9A%84%E6%9C%AA%E4%BE%86/</url>
    <content><![CDATA[<p><img src="https://hackmd.io/_uploads/HyDC1gwXC.jpg" alt="AI EXPO"></p>
<p>　　隨著近年來AI開發技術有了突破性地成長，應用端的發展也越發蓬勃。一方面嶄新的技術伴隨著開創性的思維，拓展了相關應用的領域與方向；另一方面隨著投入市場的競爭者增加，從技術、產品到品牌間的競爭更加激烈。此次有幸來到AI EXPO，親眼見證人工智慧開創的時代新潮。儘管最初是抱著旁觀者的心態參觀，但在收穫來自不同領域的眾多專家講解，以及業界對於產業脈動的反應與策略後，我想，我們是新時代的參與者。</p>
<span id="more"></span>

<p>　　在博覽眾多攤位後，讓我印象最深的，是AI的應用價值。以往我們提到AI，大多會聯想到大型語言生成模型的開發，圖像辨識與生成技術的進展，自動駕駛技術的提升等等。但以此次AI EXPO來說，我從各家廠商身上看到更多AI的運用方式。像是智慧工廠，利用物聯網自傳感器收集數據，結合人工智慧與大數據運算後，進一步對各項指標提供建議，甚至還能結合數位孿生，視覺化呈現工廠的即時情形。2025年起我國正式徵收碳稅，智慧工廠可以結合時代趨勢，統合並即時呈現工廠的空氣品質、水質、用電量等等，以數據呈現節能報告書的實際成效；電商網站行銷，運用人工智慧萃取商品資訊，產出有意義的商品組合並生成標籤，再結構化數據，對組合標籤進行關聯分析。消費者只要點擊頁面，即啟動數據收集與分析，引導消費者探索關聯產品。在個資保護意識提升的Cookieless時代，這種事先關聯分析，待消費者點擊後冷啟動的機制，可以在沒有第三方Cookie的情況下提供消費者個人化服務。各種領域、各種場合，AI從未缺席。</p>
<p>　　除了創新技術開發的運用之外，許多廠商也利用AI結合舊有的產品服務，開創新的商品價值。像是AI結合公文寫作系統，可以自動校對文件格式，並結合生成式AI推薦字詞，協助使用者編寫公文；AI結合網頁製作，從網站架設、文案撰寫到版面設計，大幅降低網頁製作的門檻；AI結合客服投訴系統，自動生成回應並聯繫相關單位處理。相較於生成式語言模型的開發、大型智慧城市平台的建置，這些產品或許在技術難度上並非最深，卻精準的打中了市場需求，因此展現出商品價值。這也提醒了我們，新的科技勢必帶來新的機會與問題，但除了著眼新的應用，我們也可以運用新技術解決舊有問題。</p>
<p>　　雖然身為學生，有時候未必能受到廠商的重視，但大部分的企業還是很歡迎了解的。不論是學生還是業界人士，只要表現出有興趣，且有內涵的樣子，通常企業都願意主動解說，也很樂於與來客互動。在一個智慧工廠的攤位上，我與廠商相談甚歡，廠商甚至想要和我交換名片，可惜的是我當時並未做好準備，因此錯過了一個難得的機會。因此，我覺得這場活動帶給我的不只是眼界的拓展，還有業界的思維。如何快速從廠商的說明中提取重點，如何提出有深度的問題，如何不失禮節又不自降身分地與廠商互動。這些需要實際經驗累積的能力，要自己練習並不容易。而AI EXPO集合了眾多業界人士，以及與之互動的機會，只要放開拘束、勇於嘗試，就能有超乎想像的收穫。</p>
<p>　　以前，我很喜歡一句話：我不知將去何方，但我已在路上。這句話呈現的是對不可預測的未來所感到的迷茫，以及隨遇而安、船到橋頭自然直的心境。然而在今天之後，我想也是時候思考，我們要去往何方了。</p>
<p><img src="https://hackmd.io/_uploads/HJKahyvXR.jpg" alt="身為AI時代的參與者，我們要去往何方？"></p>
]]></content>
      <categories>
        <category>活動經驗</category>
      </categories>
      <tags>
        <tag>AI EXPO</tag>
      </tags>
  </entry>
  <entry>
    <title>a244. 新手訓練 ~ for + if</title>
    <url>/a244-%E6%96%B0%E6%89%8B%E8%A8%93%E7%B7%B4-for-if/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a244">https://zerojudge.tw/ShowProblem?problemid=a244</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>使用scanf()函式讀取測資，再使用switch()函式依照a值輸出不同種類的運算結果。</p>
<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>在<a href="https://noah-0831.github.io/a002-%E7%B0%A1%E6%98%93%E5%8A%A0%E6%B3%95/">a002. 簡易加法</a>，我們曾提過不同種類的資料型態。以整數來說，較常使用的資料型態是int，可儲存-2,147,483,648至2,147,483,647的整數。但本題測資較大，部分測資的運算結果會超過int型態變數所能儲存的最大數值，因此需使用long long型態的變數儲存輸入，寫法是%lld。</p>
<span id="more"></span>

<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//宣告並讀取變數N，代表測資筆數</span></span><br><span class="line">    <span class="type">int</span> N;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;N);</span><br><span class="line">    <span class="comment">//使用for迴圈跑過每一筆測資</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; N ; i++) &#123;</span><br><span class="line">        <span class="comment">//宣告並讀取變數a、b、c</span></span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> a, b, c;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld %lld %lld&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line">        <span class="comment">//根據a值輸出相對應的結果</span></span><br><span class="line">        <span class="keyword">switch</span>(a) &#123;</span><br><span class="line">            <span class="comment">//若a為1，輸出b+c</span></span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, b+c);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="comment">//若a為2，輸出b-c</span></span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, b-c);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="comment">//若a為3，輸出b*c</span></span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, b*c);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="comment">//若a為4，輸出b/c</span></span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, b/c);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>程式教學</category>
      </categories>
      <tags>
        <tag>C語言</tag>
      </tags>
  </entry>
  <entry>
    <title>a229. 括號匹配問題</title>
    <url>/a229-%E6%8B%AC%E8%99%9F%E5%8C%B9%E9%85%8D%E5%95%8F%E9%A1%8C/</url>
    <content><![CDATA[<h2 id="建議類題"><a href="#建議類題" class="headerlink" title="建議類題"></a>建議類題</h2><p><a href="https://hackmd.io/DwmkclCaTUOO48NYFW8AHw?view#a524-%E6%89%8B%E6%A9%9F%E4%B9%8B%E8%AC%8E">a524. 手機之謎</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>根據題意，我們要找出對於n個左括號和n個右括號來說，所有合法的，也就是說「任一點左括號數量皆大於等於右括號」的匹配組合。因為相信多數人和我一樣，沒辦法從題目敘述中找出規律，因此本題我們使用<a href="https://openhome.cc/Gossip/CGossip/Recursion.html">遞迴</a>排除已經輸出的情況，列舉出所有的可能性。</p>
<p>想要了解什麼是遞迴，必須先知道有關函數的觀念。在<a href="https://noah-0831.github.io/a002-%E7%B0%A1%E6%98%93%E5%8A%A0%E6%B3%95/">a002. 簡易加法</a>，我們曾經提過函式是一種可以執行特定功能的程式區塊。當我們呼叫函式時，電腦就會執行函式內的程式。那麼，如果我在函式內呼叫了這個函式本身，會發生什麼事情呢？因為每當電腦執行函式時，都會再次收到我們的函式呼叫，因此電腦將不斷重複執行這個函式。這就是遞迴，藉由在函式內呼叫函式本身，形成循環以重複執行程式。</p>
<span id="more"></span>

<p>以本題來說，假設我們今天有num組括號要匹配，可以想像成是有一個長度為 2 x num 的陣列，在這個陣列的每個項，我們都可以選擇要放左括號還是右括號。因此，我們宣告一個函式，讓他從第1項跑到第 2 x num 項。在討論每個項，或者說跑到每個節點時，我們都使用遞迴分別跑一次選擇左括號和右括號的情況，直到跑到最後一個節點，即跑完所有的匹配組合。</p>
<p>在確定所有可能的匹配組合都有被討論到後，接下來我們要為遞迴加上限制條件，將我們真正想要的匹配組合留下。首先，雖然我們在各個位子都有左括號和右括號兩種選擇，但因為括號是兩兩一組的，因此左括號和右括號的總數都不應超過num個，如果我們跑一跑發現左括號或右括號的總數超過num的話，就不用再跑下去了；再來，合法的匹配組合在任一點的左括號數量一定大於等於右括號，因此如果我們跑一跑發現左括號的數量小於右括號，代表這不是合法的匹配組合，也不用再跑下去了。如此一來，跑到最後的匹配組合，一定都是合法的，就可以放心輸出了！</p>
<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>遞迴是一種重複執行程式的方法，概念是先宣告一個函式，藉由在函式內呼叫函式本身，讓程式不斷跑下去。和同樣是重複執行程式的迴圈不同的是，迴圈的每一次運行都是從頭開始，常用於重複執行指定的動作；而遞迴因為會返回距離最近的「節點」，可以跑過每個節點、每個選擇的所有可能性，完成具有「分支」的討論，進一步運用在<a href="https://dotblogs.com.tw/ilikedogs/2020/03/23/151856">深度優先演算法(DFS)</a>上。因此，推薦大家在學習完函式與迴圈後，可以試著<a href="https://medium.com/appworks-school/%E9%80%B2%E5%85%A5%E9%81%9E%E8%BF%B4-recursion-%E7%9A%84%E4%B8%96%E7%95%8C-%E4%B8%80-59fa4b394ef6">學習遞迴</a>。</p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//宣告變數n，代表總共有幾組括號要匹配</span></span><br><span class="line"><span class="comment">//宣告變數num，令其值為2*n，代表總共有幾個位子要討論</span></span><br><span class="line"><span class="type">int</span> n, num;</span><br><span class="line"><span class="comment">//宣告一長度為30的陣列arr，代表可能的括號匹配組合</span></span><br><span class="line"><span class="type">char</span> arr[<span class="number">30</span>];</span><br><span class="line"><span class="comment">//宣告回傳值為void型態（不回傳）的函式dfs，討論每一項的可能性</span></span><br><span class="line"><span class="comment">//宣告變數now，代表現在討論到第幾項，或者說跑到第幾個節點</span></span><br><span class="line"><span class="comment">//宣告變數left、right，分別代表現在左括號和右括號的數量</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">dfs</span><span class="params">(<span class="type">int</span> now, <span class="type">int</span> left, <span class="type">int</span> right)</span> &#123;</span><br><span class="line">    <span class="comment">//若左括號或右括號數量大於n，或是左括號數量小於右括號，皆為不合法的匹配組合，可以直接返回</span></span><br><span class="line">    <span class="keyword">if</span>(left &gt; n || left &lt; right)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="comment">//若跑到第num個節點，而沒有被終止，代表這是合法的匹配組合，可以輸出</span></span><br><span class="line">    <span class="comment">/*在結尾補/0再輸出字串，比以for迴圈輸出字元陣列快*/</span></span><br><span class="line">    <span class="keyword">if</span>(now == num) &#123;</span><br><span class="line">        arr[num] = <span class="string">&#x27;\0&#x27;</span>; </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, arr);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//若此節選擇的是左括號，將左括號數量加一後進入下一項的討論</span></span><br><span class="line">    arr[now] = <span class="string">&#x27;(&#x27;</span>; </span><br><span class="line">    dfs(now+<span class="number">1</span>, left+<span class="number">1</span>, right); </span><br><span class="line">    <span class="comment">//若此節選擇的是右括號，將右括號數量加一後進入下一項的討論</span></span><br><span class="line">    arr[now] = <span class="string">&#x27;)&#x27;</span>;</span><br><span class="line">    dfs(now+<span class="number">1</span>, left, right+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//主函式</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//使用EOF寫法讀取每次輸入的n值</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n) != EOF) &#123;</span><br><span class="line">        <span class="comment">/*在這裡先把num算出來，每筆測資只需算一次，比每次遞迴時都將條件設為2*n快*/</span></span><br><span class="line">        num = <span class="number">2</span>*n;</span><br><span class="line">        <span class="comment">//呼叫函式dfs，藉由遞迴跑過所有可能的括號匹配組合，再將合法的匹配組合輸出 </span></span><br><span class="line">        dfs(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>程式教學</category>
      </categories>
      <tags>
        <tag>C語言</tag>
      </tags>
  </entry>
  <entry>
    <title>a225. 明明愛排列</title>
    <url>/a225-%E6%98%8E%E6%98%8E%E6%84%9B%E6%8E%92%E5%88%97/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a225">https://zerojudge.tw/ShowProblem?problemid=a225</a></p>
<h2 id="建議類題"><a href="#建議類題" class="headerlink" title="建議類題"></a>建議類題</h2><p><a href="https://noah-0831.github.io/a104-%E6%8E%92%E5%BA%8F/">a104. 排序</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p><a href="https://totoroliu.medium.com/%E6%8E%92%E5%BA%8F%E6%BC%94%E7%AE%97%E6%B3%95-sorting-algorithm-dfd8af673f3a">為數字排序的方法</a>有很多種，而本題採用<a href="https://medium.com/@oturngo/study-note-01-%E6%B0%A3%E6%B3%A1%E6%8E%92%E5%BA%8F%E6%B3%95-bubble-sort-ee534b6f91eb">氣泡排序法</a>，具體的作法是從第一個元素開始往下檢查，如果兩者的相對順序錯誤，就將兩者的位置對調，接著重新檢查，直到最後一個元素的位置也被確認正確無誤為止。</p>
<p>以本題來說，是要將輸入的數字按個位數由小到大排列，因此我們會從第二個數字開始檢查。如果它的個位數比前一個數字的個位數還大的話，代表檢查到目前為止，它在數列中的位置是正確的，我們就不會移動他的位置，繼續檢查下去；反之則需將它與前一個數字的位置對調，然後重新檢查；若是兩個數字的個位數相同，則依照數字的數值由大到小排列。</p>
<span id="more"></span>

<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>根據題意，測資檔會包含多組測資，因此需使用「<a href="https://noah-0831.github.io/a004-%E6%96%87%E6%96%87%E7%9A%84%E6%B1%82%E5%A9%9A/">EOF</a>寫法」。所謂 EOF 並不是一種真實存在的字元，而是「End Of File」的縮寫，意思是一份檔案的結尾，也可以說是輸入的停止。通常程式在執行時會先讀取輸入，再依據輸入進行相對的行動，但我們未必能知道輸入有幾筆、到什麼時候結束，這時候我們就可以讓電腦自動偵測。一旦它偵測到EOF條件為True，即代表輸入停止，就會結束讀取輸入，如此我們的程式就不用事先指定輸入的筆數，可以不斷讀取輸入並執行直到輸入結束。</p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//宣告變數n，代表有幾個數字需要排序</span></span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="comment">//使用EOF寫法判斷程式執行的條件</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n) != EOF) &#123;</span><br><span class="line">        <span class="comment">//宣告並讀取陣列arr，代要排序的數字</span></span><br><span class="line">        <span class="type">int</span> arr[n];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;arr[i]);</span><br><span class="line">        <span class="comment">//氣泡排序法：檢查相鄰兩項之間的關係</span></span><br><span class="line">        <span class="comment">//有由小到大排序來說，若後項比前項還小，就將兩者交換</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt; n ; i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span> ; j &lt; i ; j++) &#123;</span><br><span class="line">                <span class="comment">//以個位數做排序標準，依個位數數值由小到大排列</span></span><br><span class="line">                <span class="keyword">if</span>(arr[j]%<span class="number">10</span> &gt; arr[i]%<span class="number">10</span>) &#123;</span><br><span class="line">                    <span class="type">int</span> temp = arr[i];</span><br><span class="line">                    arr[i] = arr[j];</span><br><span class="line">                    arr[j] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//若個位數相同，則將其由大到小排列</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(arr[j]%<span class="number">10</span> == arr[i]%<span class="number">10</span> &amp;&amp; arr[j] &lt; arr[i]) &#123;</span><br><span class="line">                    <span class="type">int</span> temp = arr[i];</span><br><span class="line">                    arr[i] = arr[j];</span><br><span class="line">                    arr[j] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="comment">//輸出排序後的數字</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, arr[i]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>程式教學</category>
      </categories>
      <tags>
        <tag>C語言</tag>
      </tags>
  </entry>
  <entry>
    <title>全球青年趨勢論壇 青年接待大使遴選-面試篇</title>
    <url>/%E5%85%A8%E7%90%83%E9%9D%92%E5%B9%B4%E8%B6%A8%E5%8B%A2%E8%AB%96%E5%A3%87-%E9%9D%92%E5%B9%B4%E6%8E%A5%E5%BE%85%E5%A4%A7%E4%BD%BF%E9%81%B4%E9%81%B8-%E9%9D%A2%E8%A9%A6%E7%AF%87/</url>
    <content><![CDATA[<p><img src="https://hackmd.io/_uploads/SJEH8kKxC.png" alt="2022全球青年趨勢論壇"><br>全球青年趨勢論壇是由教育部青年發展署舉辦的活動，每年都會邀請國內外18–35歲的青年與國際青年組織代表參與，透過專題座談及分組討論等方式交流年度國際趨勢議題，以拓展全球化趨勢下的青年國際事務合作。參與全球青年趨勢論壇的方式可分為「青年接待大使」和「與會青年」兩種，兩者皆需事前報名，報名各自獨立。本篇我們就來聊聊關於青年接待大使的面試流程與準備！</p>
<p>官方網站: <a href="https://iyouth.youthhub.tw/gytf/">https://iyouth.youthhub.tw/gytf/</a></p>
<p>FB粉絲專頁: <a href="https://www.facebook.com/globalyouthtrendsforum/">https://www.facebook.com/globalyouthtrendsforum/</a></p>
<span id="more"></span>

<p>這是我有關全球青年接待大使遴選的第二篇文章，還沒看過第一篇文章的人，可以點以下連結看<a href="https://noah-0831.github.io/%E5%85%A8%E7%90%83%E9%9D%92%E5%B9%B4%E8%B6%A8%E5%8B%A2%E8%AB%96%E5%A3%87-%E9%9D%92%E5%B9%B4%E6%8E%A5%E5%BE%85%E5%A4%A7%E4%BD%BF%E9%81%B4%E9%81%B8-%E6%9B%B8%E5%AF%A9%E7%AF%87/">青年接待大使書審資料的準備</a>！</p>
<p>面試地點在教育部青年發展署所在的中央聯合辦公大樓，地址為臺北市中正區徐州路5號14樓，位於臺大醫院附近。主辦單位會在面試前以電子郵件提供行前通知，內有交通路線圖，簡單來說以捷運臺大醫院站2號出口為地標，往臺大醫院的方向走，過中山南路後左轉，看到國家文創禮品館的標示後再右轉，隔壁棟就是了。中央聯合辦公大樓是多個政府機關所在，進入大樓後需向入口駐警出示行前通知，並在一樓大廳的櫃台抵押有大頭照的證件正本，換證後才可入內。此次面試的主辦單位青年發展署位於14樓，記得搭停靠偶數樓層的右側電梯。</p>
<p><img src="https://hackmd.io/_uploads/B1QaUyKg0.png" alt="行前通知內附的交通路線圖"></p>
<p>上樓後，樓層內有立牌指引進入報到區，簽到以後工作人員會向面試者說明等下面試的流程，大約到了面試名單中的報到建議時間才會移至等候區再等候一段時間，前後大約三十分鐘以上。建議要面試青年接待大使的人可以事先用紙筆或google文件記下英語自我介紹的講稿，以及可能被問到的問題回答。</p>
<p>在前一位面試者講完後，工作人員會引導前往面試區。面試現場約有8人，不過扣除工作人員後的遴選委員只有3人，而且是閉門面試，所以不用太緊張。面試時，每人約有6分鐘的時間，包含英文自我介紹1分鐘、遴選委員提問1分鐘與青年答詢4分鐘。其中英文自我介紹就是背稿，說明為什麼想成為青年接待大使，以及自身的優勢特質與能力；遴選委員提問與青年答詢採統問統答，遴選委員分別提問後，面試者可利用桌上提供的紙筆同步記下問題，再統一回答，須注意回答時使用的語言必須和該名提問者相同。<br>以下是我被問到的問題：<br>（英語）就我們所知，你是本次申請者中年紀最小的，請說服我們你具有什麼特殊優勢值得我們錄取？<br>（中文）請說明元宇宙在生活中潛在的運用價值，尤其是學習方面？<br>以為這樣就結束了？還有追問：<br>（英語）你來自臺北，如果有外國人來到臺北，你會推薦他參觀哪一個臺北的景點？為甚麼？<br>然後友A也有被追問，不知道是不是所有人都會被追問？</p>
<p>在此提供面試的準備建議：</p>
<ol>
<li>英語自我介紹要先寫稿，可以帶稿到現場，利用等候時間默背。</li>
<li>可以對著鏡子，或是電腦的視訊鏡頭練習在眾人面前發言。</li>
<li>問題大多與論壇主題、宣傳臺灣國際形象和接待外國人有關，不過當然有其他類型的問題，像是從個人書審出題之類的。</li>
</ol>
<p>最後一樣，希望這篇文章能幫助到所有想要申請為青年接待大使的人。因為Noah我最後有被選入全球青年接待大使的培訓名單，所以沒意外的話接下來還會有一篇培訓篇，敬請期待！</p>
]]></content>
      <categories>
        <category>活動經驗</category>
      </categories>
      <tags>
        <tag>全球青年趨勢論壇</tag>
      </tags>
  </entry>
  <entry>
    <title>a224. 明明愛明明</title>
    <url>/a224-%E6%98%8E%E6%98%8E%E6%84%9B%E6%98%8E%E6%98%8E/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a224">https://zerojudge.tw/ShowProblem?problemid=a224</a></p>
<h2 id="建議類題"><a href="#建議類題" class="headerlink" title="建議類題"></a>建議類題</h2><p><a href="https://noah-0831.github.io/a022-%E8%BF%B4%E6%96%87/">a022. 迴文</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>本題乍看之下就是單純判斷輸入字串是否為迴文，但須注意本題對迴文的定義是「只要重新安排順序後，符合迴文條件就算迴文」，也就是說字串的在輸入時的排列順序未必與可以形成迴文的順序相同。因此我們不能用當時<a href="https://noah-0831.github.io/a022-%E8%BF%B4%E6%96%87/">a022. 迴文</a>的想法，直接頭尾一組檢查字元是否相同，必須換種作法才行。</p>
<span id="more"></span>

<p>根據定義，迴文字串必定頭尾對稱，換句話說最多只能有一種字母出現奇數次。因此，我們可以藉由檢查測資中各字母出現的次數，來判斷重新排列後是否可以形成迴文字串。若有一種以上的字母出現奇數次則非迴文；而若是26個字母檢查完接皆未出現上述情況則為迴文。</p>
<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>在了解如何判斷迴文字串後，本題還有另兩點需要注意。<br>第一，本題的測資夾雜了非英文字母的字元，在判斷時需將這些字元忽略。<br>第二，大寫和小寫字母在本題視為相同，在判斷字母出現次數時須特別注意。</p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//宣告字元陣列input，並以字串形式讀取，代表輸入的測資</span></span><br><span class="line">    <span class="type">char</span> input[<span class="number">1000</span>];</span><br><span class="line">    <span class="comment">//使用EOF寫法判斷程式執行的條件</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, input) != EOF) &#123;</span><br><span class="line">        <span class="comment">//宣告陣列alphabet，代表各個英文字母出現的次數（不分大小寫）</span></span><br><span class="line">        <span class="comment">//宣告變數num，代表出現次數為偶數的英文字母數量</span></span><br><span class="line">        <span class="comment">//宣告變數test，代表是否為迴文字串</span></span><br><span class="line">        <span class="type">int</span> alphabet[<span class="number">26</span>] = &#123;&#125;, num = <span class="number">0</span>, test = <span class="number">1</span>;</span><br><span class="line">        <span class="comment">//逐一判斷輸入字元為何，計算各個英文字母出現的次數</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; input[i] != <span class="string">&#x27;\0&#x27;</span> ; i ++)</span><br><span class="line">            <span class="keyword">switch</span>(input[i]) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">65</span>: <span class="comment">//檢查A</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">97</span>: <span class="comment">//檢查a</span></span><br><span class="line">                    alphabet[<span class="number">0</span>] ++;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">66</span>: <span class="comment">//檢查B</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">98</span>: <span class="comment">//檢查b</span></span><br><span class="line">                    alphabet[<span class="number">1</span>] ++;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">67</span>: <span class="comment">//檢查C</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">99</span>: <span class="comment">//檢查c</span></span><br><span class="line">                    alphabet[<span class="number">2</span>] ++;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">68</span>: <span class="comment">//檢查D</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">100</span>: <span class="comment">//檢查d</span></span><br><span class="line">                    alphabet[<span class="number">3</span>] ++;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">69</span>: <span class="comment">//檢查E</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">101</span>: <span class="comment">//檢查e</span></span><br><span class="line">                    alphabet[<span class="number">4</span>] ++;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">70</span>: <span class="comment">//檢查F</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">102</span>: <span class="comment">//檢查f</span></span><br><span class="line">                    alphabet[<span class="number">5</span>] ++;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">71</span>: <span class="comment">//檢查G</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">103</span>: <span class="comment">//檢查g</span></span><br><span class="line">                    alphabet[<span class="number">6</span>] ++;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">72</span>: <span class="comment">//檢查H</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">104</span>: <span class="comment">//檢查h</span></span><br><span class="line">                    alphabet[<span class="number">7</span>] ++;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">73</span>: <span class="comment">//檢查I</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">105</span>: <span class="comment">//檢查i</span></span><br><span class="line">                    alphabet[<span class="number">8</span>] ++;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">74</span>: <span class="comment">//檢查J</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">106</span>: <span class="comment">//檢查j</span></span><br><span class="line">                    alphabet[<span class="number">9</span>] ++;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">75</span>: <span class="comment">//檢查K</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">107</span>: <span class="comment">//檢查k</span></span><br><span class="line">                    alphabet[<span class="number">10</span>] ++;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">76</span>: <span class="comment">//檢查L</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">108</span>: <span class="comment">//檢查l</span></span><br><span class="line">                    alphabet[<span class="number">11</span>] ++;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">77</span>: <span class="comment">//檢查M</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">109</span>: <span class="comment">//檢查m</span></span><br><span class="line">                    alphabet[<span class="number">12</span>] ++;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">78</span>: <span class="comment">//檢查N</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">110</span>: <span class="comment">//檢查n</span></span><br><span class="line">                    alphabet[<span class="number">13</span>] ++;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">79</span>: <span class="comment">//檢查O</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">111</span>: <span class="comment">//檢查o</span></span><br><span class="line">                    alphabet[<span class="number">14</span>] ++;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">80</span>: <span class="comment">//檢查P</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">112</span>: <span class="comment">//檢查p</span></span><br><span class="line">                    alphabet[<span class="number">15</span>] ++;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">81</span>: <span class="comment">//檢查Q</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">113</span>: <span class="comment">//檢查q</span></span><br><span class="line">                    alphabet[<span class="number">16</span>] ++;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">82</span>: <span class="comment">//檢查R</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">114</span>: <span class="comment">//檢查r</span></span><br><span class="line">                    alphabet[<span class="number">17</span>] ++;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">83</span>: <span class="comment">//檢查S</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">115</span>: <span class="comment">//檢查s</span></span><br><span class="line">                    alphabet[<span class="number">18</span>] ++;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">84</span>: <span class="comment">//檢查T</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">116</span>: <span class="comment">//檢查t</span></span><br><span class="line">                    alphabet[<span class="number">19</span>] ++;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">85</span>: <span class="comment">//檢查U</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">117</span>: <span class="comment">//檢查u</span></span><br><span class="line">                    alphabet[<span class="number">20</span>] ++;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">86</span>: <span class="comment">//檢查V</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">118</span>: <span class="comment">//檢查v</span></span><br><span class="line">                    alphabet[<span class="number">21</span>] ++;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">87</span>: <span class="comment">//檢查W</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">119</span>: <span class="comment">//檢查w</span></span><br><span class="line">                    alphabet[<span class="number">22</span>] ++;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">88</span>: <span class="comment">//檢查X</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">120</span>: <span class="comment">//檢查x</span></span><br><span class="line">                    alphabet[<span class="number">23</span>] ++;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">89</span>: <span class="comment">//檢查Y</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">121</span>: <span class="comment">//檢查y</span></span><br><span class="line">                    alphabet[<span class="number">24</span>] ++;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">90</span>: <span class="comment">//檢查Z</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">122</span>: <span class="comment">//檢查z</span></span><br><span class="line">                    alphabet[<span class="number">25</span>] ++;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">26</span> ; i ++) &#123;</span><br><span class="line">            <span class="comment">//若有一種以上的字母出現奇數次，則非迴文</span></span><br><span class="line">            <span class="keyword">if</span>(alphabet[i]%<span class="number">2</span> == <span class="number">1</span>)</span><br><span class="line">                num ++;</span><br><span class="line">            <span class="keyword">if</span>(num == <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;no...\n&quot;</span>);</span><br><span class="line">                test = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//若26個字母檢查完接皆未出現上述情況，則為迴文</span></span><br><span class="line">        <span class="keyword">if</span>(test == <span class="number">1</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;yes !\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>程式教學</category>
      </categories>
      <tags>
        <tag>C語言</tag>
      </tags>
  </entry>
  <entry>
    <title>a216. 數數愛明明</title>
    <url>/a216-%E6%95%B8%E6%95%B8%E6%84%9B%E6%98%8E%E6%98%8E/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a216">https://zerojudge.tw/ShowProblem?problemid=a216</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>這題最直觀的方式是使用迴圈求出f、g值，但有鑑於本題的測資較大，為了避免出現TLE的情況，建議直接找出f(n)、g(n)的關係式以節省運算時間。如果一時之間看不出f(n)、g(n)關係式的話，可以多寫幾項觀察他們的規律。我們會發現f(n)就是連續正整數和，公式為 (n*(n+1))&#x2F;2；g(n)則可以用數學上的遞迴關係式求得，公式為n*(n+1)*(n+2)&#x2F;6。</p>
<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>本題測資較大，部分測資的g(n)會超過int型態變數所能儲存的最大數值，因此需使用<a href="https://noah-0831.github.io/a001-%E5%93%88%E5%9B%89/">long long型態</a>變數，寫法是%lld。</p>
<span id="more"></span>

<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//宣告並讀取變數n</span></span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> n;</span><br><span class="line">    <span class="comment">//使用EOF寫法判斷程式執行的條件</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;n)!=EOF)</span><br><span class="line">        <span class="comment">//輸出f(n)=n*(n+1)/2，輸出g(n)=n*(n+1)*(n+2)/6</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld %lld\n&quot;</span>, n*(n+<span class="number">1</span>)/<span class="number">2</span>, n*(n+<span class="number">1</span>)*(n+<span class="number">2</span>)/<span class="number">6</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>程式教學</category>
      </categories>
      <tags>
        <tag>C語言</tag>
      </tags>
  </entry>
  <entry>
    <title>a215. 明明愛數數</title>
    <url>/a215-%E6%98%8E%E6%98%8E%E6%84%9B%E6%95%B8%E6%95%B8/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a215">https://zerojudge.tw/ShowProblem?problemid=a215</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>題目希望我們找出從n開始，要往下加多少數字總和才會超過m。我們可以利用迴圈重複執行的特性，從n開始將跑過的數字逐一加總，直到總和大於m為止，迴圈的執行次數即為需要的數字數量。</p>
<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>相信很多程式教材在討論for迴圈和whle迴圈這兩種常見迴圈的差別時，都會提到for迴圈的特色是可以重複運行指定次數，因此許多程式初學者會誤以為for迴圈在使用時必須指定其運行次數，但其實並非如此。for迴圈和while迴圈真正的差異在於for迴圈有一個變數叫做「迴圈變數」，他的變數值會隨著迴圈運行次數的增加而改變，進而控制for迴圈在特定條件下結束運行，因此才會衍伸出指定運行次數這樣的用法，但我們也可以將其終止條件寫成不同的形式來做更多變化。以本程式碼來說，我們for迴圈的執行條件是sum&lt;&#x3D;m，也就是說一旦sum的值大於m，for迴圈就會結束執行。</p>
<span id="more"></span>

<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//宣告變數n、m，分別代表起始數字，以及數字總和的比較標準</span></span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    <span class="comment">//使用EOF寫法讀取n、m</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;m) != EOF) &#123;</span><br><span class="line">        <span class="comment">//宣告變數sum，賦值為n，代表數字總和</span></span><br><span class="line">        <span class="comment">//宣告變數i，代表從n開始，要加幾個數字，數字總和才會大於m</span></span><br><span class="line">        <span class="type">int</span> sum = n, i;</span><br><span class="line">        <span class="comment">//用for迴圈將從n開始的數字逐一加總，直到sum&gt;m為止</span></span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">1</span> ; sum &lt;= m ; i++)</span><br><span class="line">            sum += n+i;</span><br><span class="line">        <span class="comment">//輸出</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>程式教學</category>
      </categories>
      <tags>
        <tag>C語言</tag>
      </tags>
  </entry>
  <entry>
    <title>a149. 乘乘樂</title>
    <url>/a149-%E4%B9%98%E4%B9%98%E6%A8%82/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a149">https://zerojudge.tw/ShowProblem?problemid=a149</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>本題希望我們求得輸入整數的各個位數乘積。因此，我們可以將問題分成兩個部分：將輸入數字的各個位數分開，以及把它們乘起來。</p>
<p>首先，為了將輸入數字各個位數分開存放，我們可以使用字串讀取輸入，將各個位數視作獨立的字元存放在字元陣列中。可能會有人好奇，為什麼我們不使用整數陣列存放各個位數呢？這是因為整數陣列讀取時會以空白作為各項的分界，各數字間必須要有空格才會被判定為不同項，而字元陣列則是自動將各個字元單獨存進陣列中。舉例來說，若是輸入的數字為356，因為3、5和6之間沒有以空白隔開，使用整數型態陣列讀取的話只會讀到356一個數字；而字元陣列是將356視為長度為3的字串，因此會將3、5、6分別以字元型態分開存放。</p>
<p>再來，在運算時我們必須將其從字元型態轉回整數型態。至於如何轉換，可以參考我們之前在<a href="https://noah-0831.github.io/a009-%E8%A7%A3%E7%A2%BC%E5%99%A8/">a009. 解碼器</a>所說的，使用ASCII碼。透過查表可知，0的ASCII碼為48，因此阿拉伯數字的真實值即為其ASCII碼減去48。</p>
<span id="more"></span>

<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>本題中使用了<a href="https://www.runoob.com/cprogramming/c-function-strlen.html">strlen()函式</a>取出字串長度。由於strlen()函式並非標準函式庫裡的函式，使用前須先引用 &lt;string.h&gt; 函式庫。</p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//宣告並讀取變數T，代表測資筆數</span></span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;T);</span><br><span class="line">    <span class="comment">//用for迴圈讀取T次輸入的數字</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; T ; i++) &#123;</span><br><span class="line">        <span class="comment">//以字串的方式讀取，將輸入數字的各個位數轉成字元型態存放在字元陣列中</span></span><br><span class="line">        <span class="type">char</span> num[<span class="number">11</span>];</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, num);</span><br><span class="line">        <span class="comment">//宣告變數product，賦值為1，代表輸入數字各個位數的乘積</span></span><br><span class="line">        <span class="comment">//宣告變數test，賦值為0，代表尚未偵測到此數字有位數為0</span></span><br><span class="line">        <span class="type">int</span> product = <span class="number">1</span>, test = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; <span class="built_in">strlen</span>(num) ; i++) &#123;</span><br><span class="line">            <span class="comment">//若此位數不為0，就將其與前面的乘積相乘</span></span><br><span class="line">            <span class="keyword">if</span>(num[i] != <span class="number">0</span>)</span><br><span class="line">                product *= num[i]<span class="number">-48</span>;</span><br><span class="line">            <span class="comment">//若此數字任一位數為0，其各位數乘積必為0，將test設為1後即可跳出迴圈</span></span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                test++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//若test為0，代表此數字沒有位數為0，輸出其乘積</span></span><br><span class="line">        <span class="keyword">if</span>(test == <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, product);</span><br><span class="line">        <span class="comment">//若test為1，代表此數字有位數為0，其乘積必為0</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;0\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>程式教學</category>
      </categories>
      <tags>
        <tag>C語言</tag>
      </tags>
  </entry>
  <entry>
    <title>全球青年趨勢論壇 青年接待大使遴選-書審篇</title>
    <url>/%E5%85%A8%E7%90%83%E9%9D%92%E5%B9%B4%E8%B6%A8%E5%8B%A2%E8%AB%96%E5%A3%87-%E9%9D%92%E5%B9%B4%E6%8E%A5%E5%BE%85%E5%A4%A7%E4%BD%BF%E9%81%B4%E9%81%B8-%E6%9B%B8%E5%AF%A9%E7%AF%87/</url>
    <content><![CDATA[<p><img src="https://hackmd.io/_uploads/SJEH8kKxC.png" alt="2022全球青年趨勢論壇"><br>全球青年趨勢論壇是由教育部青年發展署舉辦的活動，每年都會邀請國內外18–35歲的青年與國際青年組織代表參與，透過專題座談及分組討論等方式交流年度國際趨勢議題，以拓展全球化趨勢下的青年國際事務合作。參與全球青年趨勢論壇的方式可分為「青年接待大使」和「與會青年」兩種，兩者皆需事前報名，報名各自獨立。本篇我們就來聊聊關於青年接待大使書審資料的準備！</p>
<p>官方網站: <a href="https://iyouth.youthhub.tw/gytf/">https://iyouth.youthhub.tw/gytf/</a></p>
<p>FB粉絲專頁: <a href="https://www.facebook.com/globalyouthtrendsforum/">https://www.facebook.com/globalyouthtrendsforum/</a></p>
<span id="more"></span>

<p>相較於與會青年，此次我申請的青年接待大使要準備的審查資料較多，報名截止期限也較早。在官方提供的遴選簡章中，第三點報名須知列出了主辦單位對申請者的期許與要求，建議想要申請的人可以參考，以此為主軸出發。以下簡單統整：</p>
<ol>
<li><p>獨立、負責</p>
</li>
<li><p>樂觀、熱忱</p>
</li>
<li><p>團隊合作精神<br>須全程出席行前培訓，並配合團體時間參與活動籌備與執行</p>
</li>
<li><p>外語能力<br>須具備全民英檢中級以上或其他同等英檢資格之及格證書影本，如：多益、托福、雅思、劍橋英檢、G TELP、國際英檢、CSEPT等（詳細內容依官方資料為準）</p>
</li>
<li><p>具接待外賓或國際交流經驗</p>
</li>
</ol>
<p>此次的書審資料分為五個部分，第一是近五年學經歷，據官方說法是逐點條列，我是以表格的形式列出。內容的部分沒有特別要求，但建議配合前面統整的幾點，尤其是接待外賓或國際交流經歷，如果活動的性質差異太大，可以考慮分項。</p>
<p>第二、第三是自傳，分成中文與英文，字數限制為600字。自傳的寫法相信網路上許多文章都有教學，這邊建議善用600字的字數，不要寫得過於瑣碎繁雜，可以配合以前面統整的幾點，搭配實際經歷說明。另外有些人可能會想說兩者本質上都是自傳，差別只在於語言，所以先寫完中文自傳再翻譯成英文。但其實同樣一篇文章翻成英文以後，通常字數會減少，尤其兩者字數限制相同，這座通常會導致英文自傳字數不足。</p>
<p>第四、第五是針對當年度論壇主題回答。今年的論壇主題是「M∃TA-verse世代大未來」，顧名思義著重在元宇宙在未來生活中的潛在應用價值與可能對社會造成的影響，並以社群互動、數位生活想像、未來職場三個面向切入青年與全球數位化發展的關係。由於論述有300字的字數限制，因此必須對議題有足夠深入且具備新意的看法，以及精煉的文字運用能力。個人建議可以用條列式的方式來呈現，一方面方便控制字數，一方面也能讓審查者在最短的時間了解你的想法，進而更加快速的了解你的論述重點。</p>
<p>總而言之，個人建議在申請前務必完整看過官方簡章，配合官方期望申請者的特質撰寫申請資料。撰寫時盡量精簡文字，用最短的篇幅展現你的人格特質與能力亮點，才能夠在有限的時間內勾起審查者的注意！</p>
<p>最後希望這篇文章能幫助到所有想要申請為青年接待大使的人。因為Noah我後來有進入複試，所以接下來還會再出一篇<a href="https://noah-0831.github.io/%E5%85%A8%E7%90%83%E9%9D%92%E5%B9%B4%E8%B6%A8%E5%8B%A2%E8%AB%96%E5%A3%87-%E9%9D%92%E5%B9%B4%E6%8E%A5%E5%BE%85%E5%A4%A7%E4%BD%BF%E9%81%B4%E9%81%B8-%E9%9D%A2%E8%A9%A6%E7%AF%87/">面試篇</a>，敬請期待！</p>
]]></content>
      <categories>
        <category>活動經驗</category>
      </categories>
      <tags>
        <tag>全球青年趨勢論壇</tag>
      </tags>
  </entry>
  <entry>
    <title>a148. You Cannot Pass?!</title>
    <url>/a148-You-Cannot-Pass/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a148">https://zerojudge.tw/ShowProblem?problemid=a148</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>題目有多筆測資，當輸入為n時，代表題目希望我們對接下來輸入的n筆成績取平均，再依照平均是否大於59判斷是否過關。我們可以用for迴圈讀取n筆成績並將他們相加，除以n即可得到平均，再依照取完平均後的結果輸出相對應的輸出。</p>
<span id="more"></span>

<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>注意平均可能為小數，如果用整數型態判斷的話可能會出現誤差。舉例來說，假設今天我們計算出來的平均為59.79，顯然是大於59分的，但若是用整數型態儲存只會存到59。因此此題我們需將平均先轉成浮點數再做判斷。</p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//宣告變數n，代表成績筆數</span></span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="comment">//使用EOF寫法判斷程式執行的條件</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n) != EOF) &#123;</span><br><span class="line">        <span class="comment">//宣告變數score，代表輸入的成績</span></span><br><span class="line">        <span class="comment">//宣告變數sum，賦值為0，代表總成績</span></span><br><span class="line">        <span class="type">int</span> score, sum = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//用for迴圈讀取n筆成績，並將他們相加得到總成績</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n ; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;score);</span><br><span class="line">            sum += score;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//若平均大於59.0分，則輸出&quot;no&quot;</span></span><br><span class="line">        <span class="keyword">if</span>((<span class="type">float</span>)sum/n &gt; <span class="number">59.0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;no\n&quot;</span>);</span><br><span class="line">        <span class="comment">//若否，則輸出&quot;yes&quot;</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;yes\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>程式教學</category>
      </categories>
      <tags>
        <tag>C語言</tag>
      </tags>
  </entry>
  <entry>
    <title>a147. Print it all</title>
    <url>/a147-Print-it-all/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a147">https://zerojudge.tw/ShowProblem?problemid=a147</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>利用for迴圈檢查1到n-1的所有整數是否可被7整除，若該數除以7之後的餘數不為0，代表該數不能被7整除，就將其輸出。</p>
<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>根據題意，測資檔會包含多組測資，直到n等於0代表輸入結束。可能有人會想用while(scanf(“%d”, &amp;n) !&#x3D; 0)這樣的寫法判斷程式結束執行的條件，但須注意scanf()函式沒有<a href="https://noah-0831.github.io/a002-%E7%B0%A1%E6%98%93%E5%8A%A0%E6%B3%95/">回傳值</a>，也就是說他僅會將讀取到的數值存入變數中，而不會回傳，因此這項判斷條件永遠不會成立。如果要使用scanf()函式讀取到的輸入作為判斷條件，必須要先將輸入用指定的變數存起來，再使用該變數的值。</p>
<span id="more"></span>

<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//宣告變數n，代表判斷範圍的上限</span></span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="comment">//用while迴圈重複讀取變數n</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n)) &#123;</span><br><span class="line">        <span class="comment">//若n為0，代表輸入結束，直接跳出迴圈</span></span><br><span class="line">        <span class="keyword">if</span>(n == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="comment">//檢查1到n-1之間的整數是否可被7整除</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> num = <span class="number">1</span> ; num &lt; n ; num++)</span><br><span class="line">            <span class="comment">//若該數除以7之後的餘數不為，代表該數不能被7整除，需輸出</span></span><br><span class="line">            <span class="keyword">if</span>(num%<span class="number">7</span> != <span class="number">0</span>)</span><br><span class="line">               <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, num);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>程式教學</category>
      </categories>
      <tags>
        <tag>C語言</tag>
      </tags>
  </entry>
  <entry>
    <title>a121. 質數又來囉</title>
    <url>/a121-%E8%B3%AA%E6%95%B8%E5%8F%88%E4%BE%86%E5%9B%89/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a121">https://zerojudge.tw/ShowProblem?problemid=a121</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>本題給的測資較大，因此我們必須盡可能減少不必要的運算，避免出現TLE的情形。</p>
<p>首先，質數的定義是除了1與自己以外，沒有其他因數的數字。因此在檢查該數是否有因數的時候不用檢查1，可以直接從2開始。</p>
<p>再來，除了完全平方數的因數是1、自己和自己的根號共三個以外，所有數字的因數都是兩兩成對，其中一個小於自己的根號，一個大於自己的根號。因此，我們在檢查該數是否有因數的時候，不必真的逐一檢查到底，只需檢查到該數的根號就好。</p>
<p>最後，我們的目標在於判斷該數是否有因數，進而判斷其是否為質數，而不是找出該數所有的因數。因此，只要找到一個因數，就可以直接跳出迴圈，換下一個數字了。</p>
<span id="more"></span>

<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>質數的定義是除了1與自己以外，沒有其他因數的數字。1不是質數也不是合數!</p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//宣告變數a、b，代表檢查的上下界</span></span><br><span class="line">    <span class="type">int</span> a,b;</span><br><span class="line">    <span class="comment">//使用EOF寫法判斷程式執行的條件</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b) != EOF) &#123;</span><br><span class="line">        <span class="comment">//宣告變數ans，代表a到b之間質數的數量</span></span><br><span class="line">        <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> num = a ; num &lt;= b ; num++) &#123;</span><br><span class="line">            <span class="comment">//宣告變數test，設初始值為0，代表該數為質數</span></span><br><span class="line">            <span class="type">int</span> test = <span class="number">0</span>;</span><br><span class="line">            <span class="comment">/*因為除了完全平方數另有一個因數是自己的根號以外，</span></span><br><span class="line"><span class="comment">              基本上所有數字的因數都是兩兩成對，</span></span><br><span class="line"><span class="comment">              因此可以只檢查到該數的根號就好*/</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span> ; i &lt;= <span class="built_in">ceil</span>((<span class="type">int</span>)<span class="built_in">sqrt</span>(num)) ; i++)</span><br><span class="line">                <span class="comment">//只要該數有找到一個因數，就將test令為1，然後直接結束此輪檢查</span></span><br><span class="line">                <span class="keyword">if</span>(num%i == <span class="number">0</span>) &#123;</span><br><span class="line">                    test++;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="comment">//若test經檢查後仍為0，代表該數為質數</span></span><br><span class="line">            <span class="keyword">if</span>(test == <span class="number">0</span>)</span><br><span class="line">                ans++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(a == <span class="number">1</span> || b == <span class="number">1</span>) <span class="comment">//1不是質數也不是合數，因此若a、b為1需將之扣除</span></span><br><span class="line">            ans--;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>程式教學</category>
      </categories>
      <tags>
        <tag>C語言</tag>
      </tags>
  </entry>
  <entry>
    <title>調酒日記 認識六大基酒</title>
    <url>/%E8%AA%BF%E9%85%92%E6%97%A5%E8%A8%98%EF%BC%8D%E8%AA%8D%E8%AD%98%E5%85%AD%E5%A4%A7%E5%9F%BA%E9%85%92/</url>
    <content><![CDATA[<p><img src="https://hackmd.io/_uploads/rycgMUxlA.jpg" alt="載物酒吧"></p>
<p>在<a href="https://noah-0831.github.io/%E8%AA%BF%E9%85%92%E6%97%A5%E8%A8%98-%E5%88%9D%E5%85%A5%E5%90%A7%E6%AA%AF/">上一篇調酒日記</a>中，我們簡單的介紹了幾個調酒常見的步驟，以及需要注意的事情。那麼今天，我們就來向大家介紹幾種常見的酒類吧！</p>
<h2 id="釀造酒與蒸餾酒"><a href="#釀造酒與蒸餾酒" class="headerlink" title="釀造酒與蒸餾酒"></a>釀造酒與蒸餾酒</h2><p>相信螢幕前的各位如果和我一樣是酒精愛好者，有稍微研究過酒類的話，應該對「釀造酒」和「蒸餾酒」這兩個名詞不會陌生。儘管世上的酒種千千萬萬，款式各異，但大致上都可以依照製造程序分為這兩種。釀造酒，又名發酵酒，顧名思義，就是用各式穀物、果類或其他含糖物質，經酵母菌、乳酸菌或其他細菌的發酵作用，將糖分轉為酒精而成的酒，常見的種類有小米酒、葡萄酒、荔枝酒、日本清酒等；而蒸餾酒和釀造酒相比，則是多了蒸餾的程序，能將酒水中原先含有的水分分離出來，因此酒精濃較發酵酒高，香氣也較為濃郁。也因此，一般調酒在用的六大基酒，都屬於蒸餾酒。</p>
<span id="more"></span>

<h2 id="六大基酒"><a href="#六大基酒" class="headerlink" title="六大基酒"></a>六大基酒</h2><p>什麼是基酒呢？所謂「基」，可以理解成基礎。也就是說，基酒其實就是指調酒時常作為基底的核心酒種，其中又以六種酒－伏特加、琴酒、蘭姆、龍舌蘭、威士忌和白蘭地最為常見，因而得名「六大基酒」。這六種酒都屬於蒸餾酒，酒精濃度較高，約在35~50%上下。儘管不同款式的調酒有著不同的酒譜，但基本上絕大多數的調酒都會用到六大基酒。也因此在進入調酒界之前，務必要熟悉這六種經典酒種！</p>
<h3 id="伏特加-Vodca"><a href="#伏特加-Vodca" class="headerlink" title="伏特加 Vodca"></a>伏特加 Vodca</h3><p><strong>代表詞：酒精、無色無味</strong><br>首先要介紹的是伏特加。伏特加，又名「生命之水」，通常是由穀物如小麥釀造後再經蒸餾而成，以其無色、無味、無香氣和高濃度聞名。關於高濃度，伏特加不僅是六大基酒中最先登場的酒，更是最早出現的蒸餾酒，一般來說市面上的伏特加都經過了3次以上的蒸餾，濃度常在40%之上；至於無色無味，如果有人聞過他的味道，印象應該非常深刻，因為不論是香氣還是味道，都和平時常用的消毒用酒精太像了－一股純粹的酒精味！也因此，並不是每個人都能接受伏特加，沉迷於高濃度酒精的人對其愛不釋手，不喜歡的人則批評他是「沒個性的酒」。但也正是因為他沒有獨特的味道，更能包容、襯托一切與之搭配的材料，因此說他是調酒界中泛用性最高的酒也不為過！考量到性價比與實用性，調酒新手們若想入門，可以先從入手一支伏特加開始～</p>
<h3 id="琴酒-Gin"><a href="#琴酒-Gin" class="headerlink" title="琴酒 Gin"></a>琴酒 Gin</h3><p><strong>代表詞：杜松子、藥草香</strong><br>之所以接在伏特加後面介紹琴酒，是因為琴酒和伏特加在本質上很相似，都是由穀物發酵後再經蒸餾的蒸餾酒。兩者最大的差別在於，琴酒在蒸餾前會加入一些香料如杜松子、芫荽籽、茴香籽等，其中又以杜松子最為經典，因此得名「杜松子酒」。甚至有種說法是，琴酒加的香料不一定是杜松子，但凡是有加杜松子的，都可以稱做琴酒。也因此，琴酒雖然和伏特加一樣無色，但有種淡淡的藥草香－當然這是琴酒愛好者的說法，有些人覺得他有種怪異的中藥味，就等你親自試試囉！</p>
<h3 id="蘭姆-Rum"><a href="#蘭姆-Rum" class="headerlink" title="蘭姆 Rum"></a>蘭姆 Rum</h3><p><strong>代表詞：熱帶、花果蔗香</strong><br>接下來一定要提的酒是蘭姆，一種起源於加勒比海，用甘蔗榨出的甘蔗汁或副產物糖蜜製成的酒。蘭姆酒體有種淡淡的花果香氣，或者說是甘蔗香，和其他水果類相當適配，因此也有人形容他是一款「熱帶島嶼風格」、「海盜氣息」的酒。和同為六大基酒的威士忌一樣，蘭姆酒也會放在橡木桶裡熟成，陳年越久色澤越深。不過要注意的是，考量到有些酒商會在酒中加入香精和色素，不能完全斷定顏色越深就代表熟成的越久。至於要如何分辨蘭姆的品質和熟成程度，這裡受限篇幅就不多做介紹了，有興趣的話可以自己上網延伸閱讀，或許我們有機會的話也會再寫一篇專門講解喔～</p>
<h3 id="龍舌蘭-Tequila"><a href="#龍舌蘭-Tequila" class="headerlink" title="龍舌蘭 Tequila"></a>龍舌蘭 Tequila</h3><p><strong>代表詞：龍舌蘭草、「龍味」</strong><br>龍舌蘭酒，是種由藍色龍舌蘭草蒸餾而得的烈酒。相對於伏特加和琴酒，龍舌蘭的色澤較為多變，從透明到琥珀色都有，主要還是取決於熟成時間。一般來說龍舌蘭的熟成會在木桶中進行，陳年越久色澤越深；味道方面，龍舌蘭的風味相當具有識別度，有種難以用言語形容的「龍味」，不過我個人不是很喜歡就是了。事實上似乎台灣、乃至於亞洲人對龍舌蘭的接受度都不是很高，至少沒有在美洲的那股風潮。因此以初學者來說，其實不是很建議以龍舌蘭作為學習調酒的第一選擇，一來以龍舌蘭作為基底的調酒其實沒那麼多，二來調完還要想辦法喝掉。不過如果你很有實驗精神的話．．．說不定你就是喜歡的那個人，誰知道呢？</p>
<h3 id="威士忌-Whisky"><a href="#威士忌-Whisky" class="headerlink" title="威士忌 Whisky"></a>威士忌 Whisky</h3><p><strong>代表詞：橡木桶、渾厚甘甜</strong><br>威士忌可以說是六大基酒中種類最多、分類最複雜的酒，原則上是以穀物作為釀造原料，再用橡木桶陳釀，風味渾厚甘甜，帶有穀物與橡木香氣是他的最大特色。值得注意的是從市場的反應來看，威士忌可以說是最受台灣人喜愛的基酒－進口量高居全球第三！不過威士忌的價位較高，通常是以純飲為主，在調酒方面的使用相對較少。建議調酒新手們可以多認識認識這款備受歡迎的酒，至於入手倒是其次；如果真要嘗試威士忌調酒的話，可以找找看比較便宜的調和威士忌，以技術練習為主。</p>
<h3 id="白蘭地-Brandy"><a href="#白蘭地-Brandy" class="headerlink" title="白蘭地 Brandy"></a>白蘭地 Brandy</h3><p>白蘭地是以水果為基底的蒸餾酒，其中又以葡萄最為經典，味道溫和甘醇，還有種淡淡的水果清香。因為和威士忌一樣都會陳桶，色澤較為接近，加上兩種酒的風味接近，許多新手常常會把白蘭地和威士忌搞混，但兩種酒其實在原料上就有所不同，自然也有不同的風味。個人認為白蘭地很適合作為新手踏入調酒界的第一款酒品。不過當然這裡指的是「喝」而不是「調」，畢竟考量到白蘭地的價格與使用頻率，初學者想嘗試調酒的話大可先以其他酒種如伏特加、琴酒、蘭姆為選擇，其實就很足夠了。</p>
<h2 id="在六大基酒之外．．．"><a href="#在六大基酒之外．．．" class="headerlink" title="在六大基酒之外．．．"></a>在六大基酒之外．．．</h2><p>調酒的種類琳瑯滿目，不同的調酒多少會有一些獨特的材料。除了核心的六大基酒以外，還有許多上面沒有提到，但也很常運用在調酒中的材料，像是利口酒、橙酒、苦艾酒、氣泡酒等，都被運用在許多經典調酒上。因此，最後還是要再一次建議，新手要練習調酒的話可以優先選擇六大基酒，尤其是伏特加、琴酒和蘭姆，先把基礎的技術熟練，其他酒類則是依個人需求自行決定是否入手。那麼這篇文章就在這裡先告一個段落啦！下次，我會聊聊那些並非六大基酒，卻也常出現在調酒之中的材料，See you！</p>
]]></content>
      <categories>
        <category>調酒日記</category>
      </categories>
  </entry>
  <entry>
    <title>a104. 排序</title>
    <url>/a104-%E6%8E%92%E5%BA%8F/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a104">https://zerojudge.tw/ShowProblem?problemid=a104</a></p>
<h2 id="建議類題"><a href="#建議類題" class="headerlink" title="建議類題"></a>建議類題</h2><p><a href="https://noah-0831.github.io/a225-%E6%98%8E%E6%98%8E%E6%84%9B%E6%8E%92%E5%88%97/">a225. 明明愛排列</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p><a href="https://totoroliu.medium.com/%E6%8E%92%E5%BA%8F%E6%BC%94%E7%AE%97%E6%B3%95-sorting-algorithm-dfd8af673f3a">為數字排序的方法</a>有很多種，而本題採用<a href="https://medium.com/@oturngo/study-note-01-%E6%B0%A3%E6%B3%A1%E6%8E%92%E5%BA%8F%E6%B3%95-bubble-sort-ee534b6f91eb">氣泡排序法</a>，具體的作法是從第一個元素開始往下檢查，如果兩者的相對順序錯誤，就將兩者的位置對調，接著重新檢查，直到最後一個元素的位置也被確認正確無誤為止。</p>
<p>以本題來說，是要將正整數列由小到大排序，因此我們會從第二個數字開始檢查。如果它比前一個數字，也就是第一個數字還大的話，代表檢查到目前為止，它在數列中的位置是正確的，我們就不會移動他的位置，繼續檢查下去 ; 反之，如果它比前一個數字還小，代表它在數列中的位置不符合題目希望由小到大排序的要求，因此我們會將它與前一個數字的位置對調，然後重新檢查。</p>
<span id="more"></span>

<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>根據題意，測資檔會包含多組測資，因此需使用「<a href="https://noah-0831.github.io/a004-%E6%96%87%E6%96%87%E7%9A%84%E6%B1%82%E5%A9%9A/">EOF</a>寫法」。所謂 EOF 並不是一種真實存在的字元，而是「End Of File」的縮寫，意思是一份檔案的結尾，也可以說是輸入的停止。通常程式在執行時會先讀取輸入，再依據輸入進行相對的行動，但我們未必能知道輸入有幾筆、到什麼時候結束，這時候我們就可以讓電腦自動偵測。一旦它偵測到EOF條件為True，即代表輸入停止，就會結束讀取輸入，如此我們的程式就不用事先指定輸入的筆數，可以不斷讀取輸入並執行直到輸入結束。</p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//宣告並讀取變數n，代表要排序的數字數量</span></span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="comment">//使用EOF寫法判斷程式執行的條件</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n) != EOF) &#123;</span><br><span class="line">        <span class="comment">//宣告並讀取陣列arr，代表要排序的數字</span></span><br><span class="line">        <span class="type">int</span> arr[n];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;arr[i]);</span><br><span class="line">        <span class="comment">//氣泡排序法：檢查相鄰兩項之間的關係</span></span><br><span class="line">        <span class="comment">//有由小到大排序來說，若後項比前項還小，就將兩者交換</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt; n ; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span> ; j &lt; i ; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(arr[j] &gt; arr[i]) &#123;</span><br><span class="line">                    <span class="type">int</span> temp = arr[i];</span><br><span class="line">                    arr[i] = arr[j];</span><br><span class="line">                    arr[j] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//輸出排序後的數字</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, arr[i]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>程式教學</category>
      </categories>
      <tags>
        <tag>C語言</tag>
      </tags>
  </entry>
  <entry>
    <title>a065. 提款卡密碼</title>
    <url>/a065-%E6%8F%90%E6%AC%BE%E5%8D%A1%E5%AF%86%E7%A2%BC/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a065">https://zerojudge.tw/ShowProblem?problemid=a065</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>根據題意，7個大寫字母之間的「距離」共6個，即為提款卡密碼。我們可以利用<a href="https://noah-0831.github.io/a020-%E8%BA%AB%E5%88%86%E8%AD%89%E6%AA%A2%E9%A9%97/">ASCII碼</a>將字母轉為對應的數值，進而求出兩字母間的差值，其絕對值即為「距離」。</p>
<span id="more"></span>

<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>本程式碼使用了<a href="https://www.runoob.com/cprogramming/c-function-abs.html">abs()函式</a>對參數求絕對值。由於abs()函式並非標準函式庫裡的函式，使用前須引用 &lt;math.h&gt; 函式庫。</p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//宣告並讀取字元陣列password，代表輸入的7個相連的大寫英文字母</span></span><br><span class="line">    <span class="comment">/*注意以字串形式讀取輸入，再存進字元陣列的話，最後一碼會是空字元。</span></span><br><span class="line"><span class="comment">      因此若要存的字串有7單位長，宣告的字元陣列長度必須在8單位以上*/</span></span><br><span class="line">    <span class="type">char</span> password[<span class="number">8</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, password);</span><br><span class="line">    <span class="comment">//用for迴圈跑前6個英文字母，輸出他們和下一個英文字母的「距離」，即為提款卡密碼</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">6</span> ; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, <span class="built_in">abs</span>(password[i]-password[i+<span class="number">1</span>]));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>程式教學</category>
      </categories>
      <tags>
        <tag>C語言</tag>
      </tags>
  </entry>
  <entry>
    <title>a059. 完全平方和</title>
    <url>/a059-%E5%AE%8C%E5%85%A8%E5%B9%B3%E6%96%B9%E5%92%8C/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a059">https://zerojudge.tw/ShowProblem?problemid=a059</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>題目希望我們求出在a、b之間的所有完全平方數總和，理論上要用for迴圈跑從a到b之間的所有數字，檢查他們是否為完全平方數，若是則將他們相加，最後再輸出其總和，但這麼做的話需要在for迴圈裡加上條件判斷。因此我們也可以換種方式思考，若 a ≤ x<sup>2</sup> ≤ b ，可知 √a ≤ x ≤ √b ，故只要找出在√a及√b之間的正整數，將他們的平方相加，即為在a、b之間所有完全平方數的和。</p>
<span id="more"></span>

<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>本題中使用了<a href="https://www.runoob.com/cprogramming/c-function-ceil.html">ceil()函式</a>對參數無條件進位（向上取整），以及<a href="https://www.runoob.com/cprogramming/c-function-sqrt.html">sqrt()函式</a>對參數開根。由於ceil()函式和sqrt()函式皆非標準函式庫裡的函式，使用前必須引用 &lt;math.h&gt; 函式庫。</p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span> <span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//宣告並讀取變數T，代表測資筆數</span></span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;T);</span><br><span class="line">    <span class="comment">//用for迴圈跑T筆測資</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= T ; i++) &#123;</span><br><span class="line">        <span class="comment">//宣告並讀取變數a、b，代表數字範圍的上下限</span></span><br><span class="line">        <span class="comment">//宣告變數sum，設初始值為0，代表a、b之間的完全平方和</span></span><br><span class="line">        <span class="type">int</span> a, b, sum = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">        <span class="comment">//用for迴圈跑從√a到√b之間的所有數，將他們的平方相加求出平方和</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> num = <span class="built_in">ceil</span>(<span class="built_in">sqrt</span>(a)) ; num &lt;= <span class="built_in">sqrt</span>(b) ; num++)</span><br><span class="line">            sum += num*num;</span><br><span class="line">        <span class="comment">//輸出</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Case %d: %d\n&quot;</span>, i, sum);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>程式教學</category>
      </categories>
      <tags>
        <tag>C語言</tag>
      </tags>
  </entry>
  <entry>
    <title>a058. MOD3</title>
    <url>/a058-MOD3/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a058">https://zerojudge.tw/ShowProblem?problemid=a058</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>利用除以3之後的餘數判斷該數字是3k、3k+1還是3k+2，使用for迴圈讀取n個數字後，輸出其中3k、3k+1、3k+2的數量。</p>
<span id="more"></span>

<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p><a href="https://openhome.cc/Gossip/CppGossip/switchStatement.html">switch()條件句</a>是條件句之一。使用時，將想要判斷的數值或字元放在switch後面的括弧裡，並在case列出可能的情況，程式就會自動依據case指定的數字、字元或判斷句的情形，執行相對應的程式區塊。</p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//宣告並讀取變數n，代表接下來有幾個數字要判斷</span></span><br><span class="line">    <span class="comment">//宣告變數a、b、c，分別代表3k、3k+1、3k+2的數量</span></span><br><span class="line">    <span class="type">int</span> n, a = <span class="number">0</span>, b = <span class="number">0</span>, c = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="comment">//用for迴圈針對n個輸入的數字作相對應的判斷</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n ; i++) &#123;</span><br><span class="line">        <span class="comment">//宣告並讀取變數num，代表輸入的數字</span></span><br><span class="line">        <span class="type">int</span> num;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num);</span><br><span class="line">        <span class="comment">//依據num除3後的餘數，判斷其為3k、3k+1還是3k+2</span></span><br><span class="line">        <span class="keyword">switch</span>(num%<span class="number">3</span>) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                a++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                b++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                c++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//輸出</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d&quot;</span>, a, b, c);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>程式教學</category>
      </categories>
      <tags>
        <tag>C語言</tag>
      </tags>
  </entry>
  <entry>
    <title>a054. 電話客服中心</title>
    <url>/a054-%E9%9B%BB%E8%A9%B1%E5%AE%A2%E6%9C%8D%E4%B8%AD%E5%BF%83/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a054">https://zerojudge.tw/ShowProblem?problemid=a054</a></p>
<h2 id="建議類題"><a href="#建議類題" class="headerlink" title="建議類題"></a>建議類題</h2><p><a href="https://noah-0831.github.io/a020-%E8%BA%AB%E5%88%86%E8%AD%89%E6%AA%A2%E9%A9%97/">a020. 身分證檢驗</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>本題的題意相當複雜，簡單來說就是要我們透過檢查碼反推可能的英文字母。<br>而檢查碼的算法如下:</p>
<ol>
<li>將身分證字號中代表出生縣市的英文代號依照附圖的方式轉換成數字。</li>
<li>將1.的數字的個位數字乘以9倍並加上十位數字。</li>
<li>將身分證字號的數字部分，由左到右分別乘上8、7、6、5、4、3、2、1、1。</li>
<li>令s為2.加上3.的和，m為s的個位數，檢查碼c即為10-m。</li>
</ol>
<p>因此，我們可以將身份證號碼的後9碼用字元陣列儲存，經由運算得到各位相對數字乘積的總和s後，推得檢查碼c，進而依據c值輸出對應的出生縣市。</p>
<span id="more"></span>

<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p><a href="https://openhome.cc/Gossip/CppGossip/switchStatement.html">switch()條件句</a>是條件句之一。使用時，將想要判斷的數值或字元放在switch後面的括弧裡，並在case列出可能的情況，程式就會自動依據case指定的數字、字元或判斷句的情形，執行相對應的程式區塊。</p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//宣告並讀取字元陣列num，代表身份證號碼的後9碼</span></span><br><span class="line">    <span class="type">char</span> num[<span class="number">10</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, num);</span><br><span class="line">    <span class="comment">//宣告變數s，代表身分證字號各位相對數字乘積的總和</span></span><br><span class="line">    <span class="type">int</span> s = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//將身分證字號的數字部分由左到右分別乘上8、7、6、5、4、3、2、1，最後再加上末碼</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">8</span> ; i++)</span><br><span class="line">        s += (num[i]<span class="number">-48</span>)*(<span class="number">8</span>-i);</span><br><span class="line">    s += num[<span class="number">8</span>]<span class="number">-48</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//宣告變數c，代表檢查碼</span></span><br><span class="line">    <span class="comment">//將10減去s的個位數後，即可得c</span></span><br><span class="line">    <span class="type">int</span> c = <span class="number">10</span>-s%<span class="number">10</span>;</span><br><span class="line">    <span class="comment">//檢查碼只有一位數，因此若c=10時，則檢查碼為0</span></span><br><span class="line">    <span class="keyword">if</span>(c == <span class="number">10</span>)</span><br><span class="line">        c = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//依據c值反推可能的出生縣市</span></span><br><span class="line">    <span class="keyword">switch</span>(c) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;BNZ&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;AMW&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;KLY&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;JVX&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;HU&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;GT&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;FS&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;ER&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;DOQ&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;CIP&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>程式教學</category>
      </categories>
      <tags>
        <tag>C語言</tag>
      </tags>
  </entry>
  <entry>
    <title>a053. Sagit&#39;s 計分程式</title>
    <url>/a053-Sagit-s-%E8%A8%88%E5%88%86%E7%A8%8B%E5%BC%8F/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a053">https://zerojudge.tw/ShowProblem?problemid=a053</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>以if_else條件句判斷答對題數的情形，並輸出相對應的輸出。</p>
<span id="more"></span>

<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>在C語言裡，一個條件句只能有一個關係運算子，因此平時書寫的寫法10 &lt; N &lt;20，需改寫成10 &lt; N &amp;&amp; N &lt; 20。</p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//宣告並讀取變數N，代表答對題數</span></span><br><span class="line">    <span class="type">int</span> N;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;N);</span><br><span class="line">    <span class="comment">//答對題數在 0~10 者，每題給6分</span></span><br><span class="line">    <span class="keyword">if</span>(N &lt;= <span class="number">10</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, <span class="number">6</span>*N);</span><br><span class="line">    <span class="comment">//題數在 11~20 者，從第11題開始，每題給2分</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="number">10</span> &lt; N &amp;&amp; N &lt;= <span class="number">20</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, <span class="number">60</span>+<span class="number">2</span>*(N<span class="number">-10</span>));</span><br><span class="line">    <span class="comment">//題數在 21~40 者，從第21題開始，每題給1分</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="number">20</span> &lt; N &amp;&amp; N &lt;= <span class="number">40</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, <span class="number">80</span>+<span class="number">1</span>*(N<span class="number">-20</span>));</span><br><span class="line">    <span class="comment">//題數在 40 以上者，一律100分</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;100&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>程式教學</category>
      </categories>
      <tags>
        <tag>C語言</tag>
      </tags>
  </entry>
  <entry>
    <title>a044. 空間切割</title>
    <url>/a044-%E7%A9%BA%E9%96%93%E5%88%87%E5%89%B2/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a044">https://zerojudge.tw/ShowProblem?problemid=a044</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>這題的程式寫法並不難，關鍵在於空間中的n個平面最多可將空間切成幾個區域。已知n個平面最多可以將空間分割成(n<sup>3</sup>+5n+6)&#x2F;6個區域，因此先讀取輸入的n值，再輸出(n<sup>3</sup>+5n+6)&#x2F;6的值。</p>
<span id="more"></span>

<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>根據題意，測資檔會包含多組測資，因此需使用「<a href="https://noah-0831.github.io/a004-%E6%96%87%E6%96%87%E7%9A%84%E6%B1%82%E5%A9%9A/">EOF</a>寫法」。所謂 EOF 並不是一種真實存在的字元，而是「End Of File」的縮寫，意思是一份檔案的結尾，也可以說是輸入的停止。通常程式在執行時會先讀取輸入，再依據輸入進行相對的行動，但我們未必能知道輸入有幾筆、到什麼時候結束，這時候我們就可以讓電腦自動偵測。一旦它偵測到EOF條件為True，即代表輸入停止，就會結束讀取輸入，如此我們的程式就不用事先指定輸入的筆數，可以不斷讀取輸入並執行直到輸入結束。</p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//宣告變數n，代表題目給定的正整數</span></span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="comment">//用while迴圈搭配EOF寫法讀取每筆n值，並輸出對應的(n&lt;sup&gt;3&lt;/sup&gt;+5n+6)/6值</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n) != EOF)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, (n*n*n+<span class="number">5</span>*n+<span class="number">6</span>)/<span class="number">6</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程式教學</category>
      </categories>
      <tags>
        <tag>C語言</tag>
      </tags>
  </entry>
  <entry>
    <title>a042. 平面圓形切割</title>
    <url>/a042-%E5%B9%B3%E9%9D%A2%E5%9C%93%E5%BD%A2%E5%88%87%E5%89%B2/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a042">https://zerojudge.tw/ShowProblem?problemid=a042</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>這題的程式寫法並不難，關鍵在於找到平面上的n個圓最多可以把平面分割成幾區域。已知n個圓最多可以把平面分割成n<sup>2</sup>-n+2個區域，因此先讀取輸入的n值，再輸出n<sup>2</sup>-n+2的值。</p>
<span id="more"></span>

<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>根據題意，測資檔會包含多組測資，因此需使用「<a href="https://noah-0831.github.io/a004-%E6%96%87%E6%96%87%E7%9A%84%E6%B1%82%E5%A9%9A/">EOF</a>寫法」。所謂 EOF 並不是一種真實存在的字元，而是「End Of File」的縮寫，意思是一份檔案的結尾，也可以說是輸入的停止。通常程式在執行時會先讀取輸入，再依據輸入進行相對的行動，但我們未必能知道輸入有幾筆、到什麼時候結束，這時候我們就可以讓電腦自動偵測。一旦它偵測到EOF條件為True，即代表輸入停止，就會結束讀取輸入，如此我們的程式就不用事先指定輸入的筆數，可以不斷讀取輸入並執行直到輸入結束。</p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//宣告變數n，代表題目給定的正整數</span></span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="comment">//用while迴圈搭配EOF寫法讀取每筆n值，並輸出對應的n&lt;sup&gt;2&lt;/sup&gt;-n+2值</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n) != EOF)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, n*n-n+<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程式教學</category>
      </categories>
      <tags>
        <tag>C語言</tag>
      </tags>
  </entry>
  <entry>
    <title>a040. 阿姆斯壯數</title>
    <url>/a040-%E9%98%BF%E5%A7%86%E6%96%AF%E5%A3%AF%E6%95%B8/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a040">https://zerojudge.tw/ShowProblem?problemid=a040</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>由題目可知阿姆斯壯數的判斷方法為將待判斷的數字依照位數分拆成各個數字後，依照待判斷數字的位數n次方後，再判斷各位數的次方和是否等於待判斷的數字。故本題的兩個關鍵分別是判斷輸入數字的位數，以及取各個位數的n次方。</p>
<span id="more"></span>

<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>本題中使用了<a href="https://www.runoob.com/cprogramming/c-function-pow.html">pow()函式</a>表示指數寫法，其中第一個參數代表指數的底數，第二個參數代表次方。由於pow()函式並非標準函式庫裡的函式，使用前必須先引用 &lt;math.h&gt; 函式庫。另外需注意pow函式的回傳值為double型態，因此需使用(int)寫法轉為int型態。</p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//宣告並讀取變數n、m，代表判斷範圍的上下限</span></span><br><span class="line">    <span class="type">int</span> n, m, test = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="comment">//利用for迴圈跑從n到m的所有數字</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> num = n ; num &lt;= m ; num++) &#123;</span><br><span class="line">        <span class="comment">//宣告變數num，代表檢查到的數；宣告變數len，代表此數的位數</span></span><br><span class="line">        <span class="type">int</span> i = num, len = <span class="number">1</span>;</span><br><span class="line">        <span class="comment">//若此數大於等於10，就將其除以10，並將len加一</span></span><br><span class="line">        <span class="keyword">while</span>(i &gt;= <span class="number">10</span>) &#123;</span><br><span class="line">            i /= <span class="number">10</span>;</span><br><span class="line">            len++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//宣告變數sum，代表各個位數的總和</span></span><br><span class="line">        <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//從最高位開始，將此數的各個位數len次方後相加</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = len ; i &gt; <span class="number">0</span> ; i--)</span><br><span class="line">            <span class="comment">//num為目前判斷的數字，共len位數，i代表目前檢查到的位數</span></span><br><span class="line">            <span class="comment">//將num%pow(10, i)即可得num在i位以後（含）的數字，/pow(10, i-1)可得num在i-1位以前的數字，即為第i位數字</span></span><br><span class="line">            sum += <span class="built_in">pow</span>((num%(<span class="type">int</span>)<span class="built_in">pow</span>(<span class="number">10</span>, i)/(<span class="type">int</span>)<span class="built_in">pow</span>(<span class="number">10</span>, i<span class="number">-1</span>)), len);</span><br><span class="line">        <span class="comment">//若此len位數的數字，各個位數的len次方和等於自己，即為阿姆斯壯數，需輸出</span></span><br><span class="line">        <span class="keyword">if</span>(sum == num) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, num);</span><br><span class="line">            test++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//若範圍內的數字皆無阿姆斯壯數，輸出None</span></span><br><span class="line">    <span class="keyword">if</span>(test == <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;none&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>程式教學</category>
      </categories>
      <tags>
        <tag>C語言</tag>
      </tags>
  </entry>
  <entry>
    <title>a038. 數字翻轉</title>
    <url>/a038-%E6%95%B8%E5%AD%97%E7%BF%BB%E8%BD%89/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a038">https://zerojudge.tw/ShowProblem?problemid=a038</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>先以字元陣列的形式讀取輸入的字串，由後往前輸出，注意避開前綴0。</p>
<span id="more"></span>

<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>需注意前綴零不輸出，例如5800翻轉後為85，而不是0085。至於如何判斷該位是否為前綴零，可以用前面是否出現過非零數字來判斷。若前面沒有輸出過非0數字，則為前綴零，不輸出；若否，則為非前綴零，需輸出。</p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//宣告並讀取字元陣列num，代表輸入的數字</span></span><br><span class="line">    <span class="type">char</span> num[<span class="number">10</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, num);</span><br><span class="line">    <span class="comment">//宣告變數test，並設初始值為0，記錄前面是否有輸出過非零數字</span></span><br><span class="line">    <span class="comment">//若test為0，代表之前尚未輸出過非零數字，這一位數若是0即為前綴0，不需輸出</span></span><br><span class="line">    <span class="comment">//若test為1，代表之前已經輸出過非零數字，這一位數就算是0也不是前綴0，需輸出</span></span><br><span class="line">    <span class="type">int</span> test = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; <span class="built_in">strlen</span>(num) ; i++)</span><br><span class="line">        <span class="keyword">if</span>(num[(<span class="built_in">strlen</span>(num)<span class="number">-1</span>)-i] != <span class="string">&#x27;0&#x27;</span> || test != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, num[(<span class="built_in">strlen</span>(num)<span class="number">-1</span>)-i]);</span><br><span class="line">            <span class="comment">//輸出後將test設為1，代表已經輸出過非零數字</span></span><br><span class="line">            test=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="comment">//若test仍為0，說明直到跑完指個陣列都未曾輸出過非零數字，也就是說這個數字就是0</span></span><br><span class="line">    <span class="keyword">if</span>(test == <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>程式教學</category>
      </categories>
      <tags>
        <tag>C語言</tag>
      </tags>
  </entry>
  <entry>
    <title>a034. 二進位制轉換</title>
    <url>/a034-%E4%BA%8C%E9%80%B2%E4%BD%8D%E5%88%B6%E8%BD%89%E6%8F%9B/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a034">https://zerojudge.tw/ShowProblem?problemid=a034</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>在進入本題的討論之前，我們需要先了解何謂進位制。所謂的進位制，指的是以「基數」的指數和表示數字的記數方法。以最常見的十進位制來說，基數就是10。因此，以123這個數字來說，在十進位制下即為 1 x 10<sup>2</sup> + 2 x 10<sup>1</sup> + 3 x 10<sup>0</sup> 。而所謂的二進位制，就是基數為2的進位制。除了基數不同以外，邏輯和十進位制其實相同。因此，在進行從十進位制到二進位制的轉換時，我們可以2的指數逐一降次檢查大小。</p>
<p>因為整數型態的變數可儲存的最大值為2<sup>31</sup>，所以我們先從2<sup>31</sup>開始檢查，若該數比2<sup>31</sup>還大，就將該位數註記為1，並將其值減去2<sup>31</sup>，否則將該位數註記為0。接著降次繼續檢查，直到整個數字檢查完畢，即完成二進位制的轉換。舉例來說，十進位制的123可以被表示為 1 x 2<sup>6</sup> + 1 x 2<sup>5</sup> + 1 x 2<sup>4</sup> + 1 x 2<sup>3</sup> + 0 x 2<sup>2</sup> + 1 x 2<sup>1</sup> + 1 x 2<sup>0</sup> ，因此其在二進位制表示法即為1111011。</p>
<span id="more"></span>

<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>根據題意，測資檔會包含多組測資，因此需使用「EOF寫法」。所謂 EOF 並不是一種真實存在的字元，而是「End Of File」的縮寫，意思是一份檔案的結尾，也可以說是輸入的停止。通常程式在執行時會先讀取輸入，再依據輸入進行相對的行動，但我們未必能知道輸入有幾筆、到什麼時候結束，這時候我們就可以讓電腦自動偵測。一旦它偵測到EOF條件為True，即代表輸入停止，就會結束讀取輸入，如此我們的程式就不用事先指定輸入的筆數，可以不斷讀取輸入並執行直到輸入結束。</p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 32</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 宣告變數dec，代表輸入的十進位整數</span></span><br><span class="line">    <span class="type">int</span> dec;</span><br><span class="line">    <span class="comment">// 使用EOF寫法讀取每次輸入的dec值</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;dec) != EOF) &#123;</span><br><span class="line">        <span class="comment">// 宣告一維陣列bin，以陣列形式存放轉換後的二進位整數</span></span><br><span class="line">        <span class="type">int</span> bin[N];</span><br><span class="line">        <span class="comment">// 宣告變數digit，代表轉換後的二進位整數長度（位數）</span></span><br><span class="line">        <span class="type">int</span> digit = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 要將十進位轉為二進位，可將其除以2</span></span><br><span class="line">        <span class="comment">// 除以2後，得出的餘即為二進位的其中一位</span></span><br><span class="line">        <span class="comment">// 繼續將商除以2，直到商為0為止，即可求出完整的二進位數字</span></span><br><span class="line">        <span class="keyword">while</span>(dec) &#123;</span><br><span class="line">            bin[digit] = dec%<span class="number">2</span>;</span><br><span class="line">            dec /= <span class="number">2</span>;</span><br><span class="line">            digit++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//輸出</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = digit<span class="number">-1</span> ; i &gt;= <span class="number">0</span> ; i --)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, bin[i]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>程式教學</category>
      </categories>
      <tags>
        <tag>C語言</tag>
      </tags>
  </entry>
  <entry>
    <title>調酒日記 初入吧檯</title>
    <url>/%E8%AA%BF%E9%85%92%E6%97%A5%E8%A8%98%EF%BC%8D%E5%88%9D%E5%85%A5%E5%90%A7%E6%AA%AF/</url>
    <content><![CDATA[<p>在接觸校內酒吧後，我對於酒吧文化有了更多的想像。喜歡調酒帶給大家不一樣的味蕾感受，更喜歡酒吧讓大家有機會看見不一樣的自己。在那之後和朋友陸續造訪了幾間酒吧，感受各家酒吧之間的氣氛，這學期也決定加入調酒社團，正式踏上調酒之路。期望能藉由親身參與，學習更多實務技術，將酒吧文化推廣出去！</p>
<p>本周因為是第一堂課，學長姐詳細地介紹了調酒的的幾個基本環節。包括：</p>
<p><strong>倒酒</strong>：轉開瓶蓋後，一手將瓶蓋拾起，置於拇指與食指之間，另一手托著酒瓶底部倒酒。這邊比較需要注意的是出於衛生，瓶蓋不會直接放在吧檯上，因此調酒時要養成隨手拾起瓶蓋的習慣；至於倒酒方式更多的是視覺效果，不希望客人看到酒的話，握酒瓶時可以用手擋住酒瓶標籤旁邊露出的透明瓶身。</p>
<p><strong>冰杯</strong>：在開始調酒之前的冰杯，會依據調酒種類盛裝適量冰塊，將杯子置於吧檯上，一手固定酒杯，一手持攪拌棒沿杯緣輕拌冰塊，直到杯口起霧為止。冰杯的目的在於調整酒杯溫度在適當範圍，以最好地發揮出酒品的特性，因此攪拌時節奏不必太快，確定杯口都凝霧再停止。</p>
<span id="more"></span>

<p><strong>攪拌</strong>：常稱為stir。調酒用的攪拌匙外觀很像長柄茶匙，一端較小一端較大，可依照情況選擇合適的一端。攪拌時，拇指和食指扣住攪拌匙上端，中指和無名指夾住下端，沿杯緣輕輕繞圈。注意繞圈時使用的都是手指的力，以順時鐘方向來說，前半圈靠的是中指內推，後半圈是無名指外托。</p>
<p><strong>搖盪</strong>：常稱為shake，音譯為雪克。雪克杯不只用於調酒上，對一般人來說或許更常見於手搖杯飲料店，通常為三節式結構，由下端的瓶身、上端的上蓋與頂端的頂端構成，上下收窄而中間略出。搖盪時，慣用手拇指按住頂蓋，食指、中指按住上蓋與瓶身，無名指和小指反向頂住瓶身，確認單手可以握緊後，另一隻手作為輔助，姿勢相對隨意地扶住杯子。手指固定後放鬆手腕，盡可能保持手臂和手肘不動，藉由手腕前後搖晃帶動杯子搖盪。這裡比較重要的是上蓋與頂蓋之間存在進氣孔，是調酒的關鍵之一，因此搖晃時不要只是線性的上下衝，要以手腕力量為主，帶出略呈弧形的軌跡。</p>
<p>在經過這次社課後，我大致了解到本社社課的模式，晚上7:00到10:00共三小時的時間，包含半小時的酒類知識介紹、一小時半的調酒教學與實際操作，剩下則是自由練習時間。整體來說氣氛相當開放隨興，不少與人交流的機會，但即使不放心思在人際互動上也不會感到壓力。課程也提供了動手調酒的機會，每位社員都可以依自己的喜好，嘗試調出剛學到的兩杯調酒，而不是單純的理論講解。只能說，很慶幸自己願意踏出第一步，才有機會接觸到外面的世界。</p>
]]></content>
      <categories>
        <category>調酒日記</category>
      </categories>
  </entry>
  <entry>
    <title>Noah的小記2 那些創立網站時遇到的問題與解方</title>
    <url>/Noah%E7%9A%84%E5%B0%8F%E8%A8%982%EF%BC%8D%E9%82%A3%E4%BA%9B%E5%89%B5%E7%AB%8B%E7%B6%B2%E7%AB%99%E6%99%82%E9%81%87%E5%88%B0%E7%9A%84%E5%95%8F%E9%A1%8C%E8%88%87%E8%A7%A3%E6%96%B9/</url>
    <content><![CDATA[<p>在架設網站的時候，儘管事先在網路閱讀了許多教學，按部就班地完成了設定的步驟，但每個人的帳戶、電腦情況和軟體的版本有所不同，難免會出現一些預料之外的情況。因此，我決定用一篇文章，說明我在架設網站時所遇到的種種問題，以及排除的方法。</p>
<p>首先，是使用hexo指令時的報錯。</p>
<p>既然這個網站是用hexo架設的，當然是使用hexo指令來創建、編修、發布文件。但有次使用hexo的指令後，Git Bash跳出了以下報錯：<br><strong>Commands:help Get help on a command.init Create a new Hexo folder.version Display version information…</strong><br>從錯誤訊息看不太出問題出在哪裡，只知道此刻hexo的所有指令皆未能順利執行。</p>
<p>事實上，這是因為檔案路徑已經被移動過了。</p>
<span id="more"></span>

<p>在創建網站時，電腦端會同步產生一個叫做「github page」的資料夾，將所有相關資料存放在裡面。因此，當我們使用hexo指令時，指向的位置當然要是github page，也就是離檔案位置最近的地方。如果不慎更動到檔案路徑，無論你重複再多次指令，github page都無法收到。我們可以在Git Bash使用cd指令，重新指派檔案路徑，寫法如下：</p>
<p>cd ~&#x2F;Documents&#x2F;中間的檔案路徑&#x2F;“github page”</p>
<p>當然，也可以從檔案總管直接找到github page，點進資料夾後在空白處按右鍵，選擇「顯示其他選項－Git Bash Here」，直接在檔案位置開啟Git Bash，檔案路徑就會直接預設到github page了。</p>
<p>再來，是<a href="https://blog.csdn.net/qq_26540999/article/details/53445589">郵箱與名字的遺失</a>。</p>
<p>一次使用hexo指令發布文章時，Git Bash出現了以下報錯：<br><strong>git config –global user.email “<a href="mailto:&#121;&#111;&#117;&#x40;&#101;&#120;&#97;&#109;&#112;&#108;&#101;&#46;&#99;&#x6f;&#x6d;">&#121;&#111;&#117;&#x40;&#101;&#120;&#97;&#109;&#112;&#108;&#101;&#46;&#99;&#x6f;&#x6d;</a>“</strong><br><strong>git config –global user.name “Your Name”…</strong><br><strong>to set your account’s default identity.</strong><br><strong>Omit –global to set the identity only in this repository…</strong><br><strong>fatal: unable to auto-detect email address (got ‘Administrator@MS-201610130300.(none)’)</strong></p>
<p>這次的錯誤訊息就很明顯了，要我們重新設定身分。簡單來說，在使用github page發佈文章時，系統會先創建一個git資料夾，把檔案放入資料夾後再發佈。而電腦在創建git資料夾的過程中發現我們提供的身分訊息並不完整，此時只要手動在Git Bash中補充其所需訊息即可，寫法如下：</p>
<p>git config –global user.email “你的郵箱”<br>git config–global user.name “你的名字”</p>
<p>注意”你的郵箱”和”你的名字”的部分，要填入自己在創建帳號時所使用的信箱和名字，輸入後再次送出指令就會恢復正常了。</p>
<p>最後是一個困擾我很久的問題。當初在設定hexo的時候，參考了許多網路文章。其中一篇寫到若要設定網頁的圖片背景，可在github page&#x2F;source&#x2F;_data裡找到一個叫做styles.styl的檔案，在裡面打上以下內容：<br>body {<br>    background: url(圖片的檔案路徑);<br>    background-size: cover;<br>    background-repeat: no-repeat;<br>    background-attachment: fixed;<br>    background-position: top center;<br>}<br>先說結論，在styles.styl檔裡面設定網頁的圖片背景這點是對的，但打法錯了。若是照打上去，會出現ParseError，也就是格式上的錯誤。我自己試成功的設定方式如下：<br>background: 圖片的檔案路徑<br>background-size: cover<br>background-repeat: no-repeat<br>background-attachment: fixed<br>background-position: top center<br>內容大致上和教學一致，但外面不用加上body{}，圖片的檔案路徑也不用加url，句尾去掉;，最後把不必要的空白行和縮排去除即可。</p>
]]></content>
      <categories>
        <category>Noah的小記</category>
      </categories>
  </entry>
  <entry>
    <title>a024. 最大公因數(GCD)</title>
    <url>/a024-%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8(GCD)/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a024">https://zerojudge.tw/ShowProblem?problemid=a024</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>求兩數最大公因數的辦法有很多種，可以將兩數個別的因數都先求出來，再取它們的交集得到最大公因數；也可以直接求兩數公因數的最大值。但本題測資的值較大，上述方法在ZeroJudge上執行時很可能會超時(TLE)。因此，建議使用<a href="https://zh.wikipedia.org/wiki/%E8%BC%BE%E8%BD%89%E7%9B%B8%E9%99%A4%E6%B3%95">輾轉相除法</a>，快速計算最大公因數。</p>
<p>輾轉相除法的概念是，兩數的最大公因數等於其中較小的數和兩數相除後的餘數的最大公因數。具體的做法是先將兩數中較大的數字除以較小的數字，基於除法運算後餘比商小的特性，可知剩下的餘一定會比原先較小的數字還小。這時原先較小的數字就成了新的運算中較大的數字，而餘則成了新的運算中較小的數字。重複運算至其中一數變成零為止，剩下的另一個數就是兩數的最大公因數。如果在看完上述文字解說後仍然無法立刻理解，可以參考<a href="https://zh.wikipedia.org/wiki/%E8%BC%BE%E8%BD%89%E7%9B%B8%E9%99%A4%E6%B3%95">維基百科上的動畫</a>，或是<a href="http://www.mathland.idv.tw/fun/euclidean.htm">昌爸工作坊提供的運算欄位列出的算式</a>，搭配實際運算或程式演示幫助理解。</p>
<span id="more"></span>

<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>本程式碼第7、8行使用了「<a href="https://shengyu7697.github.io/cpp-ternary-operator/">條件運算子</a>」，寫法是「(條件) ？ (敘述1) ： (敘述2)」。條件運算子在程式執行時，會依據條件決定接下來的動作。如果符合條件就回傳敘述1的值，否則回傳敘述2的值。</p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//宣告變數a、b，代表輸入的兩個整數</span></span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">    <span class="comment">//宣告變數big、small，分別代表兩數中較大和較小的數字</span></span><br><span class="line">    <span class="type">int</span> big = (a &gt; b) ? a : b;</span><br><span class="line">    <span class="type">int</span> small = (a &gt; b) ? b : a;</span><br><span class="line">    <span class="comment">//輾轉相除法：將兩數中較大的數字除以較小的數字，</span></span><br><span class="line">    <span class="comment">//原來較小的數字作為新的運算中教大的數字，餘作為新的運算中較小的數字</span></span><br><span class="line">    <span class="comment">//直到其一為0時運算結束，剩下的數字就是兩數的最大公因數</span></span><br><span class="line">    <span class="keyword">while</span>(small != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="type">int</span> temp = big;</span><br><span class="line">        big = small;</span><br><span class="line">        small = temp%small;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, big);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>程式教學</category>
      </categories>
      <tags>
        <tag>C語言</tag>
      </tags>
  </entry>
  <entry>
    <title>a022. 迴文</title>
    <url>/a022-%E8%BF%B4%E6%96%87/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a022">https://zerojudge.tw/ShowProblem?problemid=a022</a></p>
<h2 id="建議類題"><a href="#建議類題" class="headerlink" title="建議類題"></a>建議類題</h2><p><a href="https://noah-0831.github.io/a224-%E6%98%8E%E6%98%8E%E6%84%9B%E6%98%8E%E6%98%8E/">a224. 明明愛明明</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>迴文，是指字串不論是從正向讀還是反向讀均相同，也就是說迴文字串必定頭尾對稱。因此，我們可以利用for迴圈檢查。若長度為len的字串，第i項等於第len-i-1項，就將計數變數count值+1。若count值等於len&#x2F;2，就代表該字串符合迴文的條件。</p>
<span id="more"></span>

<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>在C語言的語法裡，陣列的最後一項是空字元，也就是說若今天有一個大小為i項的陣列，那麼它可以儲存的項數是i-1項！</p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//宣告並讀取陣列arr，代表輸入的字串</span></span><br><span class="line">    <span class="type">char</span> arr[<span class="number">1000</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, arr);</span><br><span class="line">    <span class="comment">//宣告變數count，代表前後對稱的組數</span></span><br><span class="line">    <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//迴文字串必然對稱，因此我們可以檢查該字串前後對應到的項是否相同</span></span><br><span class="line">    <span class="comment">//若發現字串的任一組頭尾不同，即非迴文，輸出no後跳出迴圈</span></span><br><span class="line">    <span class="keyword">for</span>(count = <span class="number">0</span> ; count &lt; <span class="built_in">strlen</span>(arr)/<span class="number">2</span> ; count++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(arr[count] != arr[(<span class="built_in">strlen</span>(arr)<span class="number">-1</span>)-count]) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;no&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//即非迴文到字串的一半都未發現不同的組，則為迴文，輸出yes</span></span><br><span class="line">    <span class="keyword">if</span>(count == <span class="built_in">strlen</span>(arr)/<span class="number">2</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;yes&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>程式教學</category>
      </categories>
      <tags>
        <tag>C語言</tag>
      </tags>
  </entry>
  <entry>
    <title>a020. 身分證檢驗</title>
    <url>/a020-%E8%BA%AB%E5%88%86%E8%AD%89%E6%AA%A2%E9%A9%97/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a020">https://zerojudge.tw/ShowProblem?problemid=a020</a></p>
<h2 id="建議類題"><a href="#建議類題" class="headerlink" title="建議類題"></a>建議類題</h2><p><a href="https://noah-0831.github.io/a054-%E9%9B%BB%E8%A9%B1%E5%AE%A2%E6%9C%8D%E4%B8%AD%E5%BF%83/">a054. 電話客服中心</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>本題的題意相當複雜，大致上的意思是:</p>
<ol>
<li>讀取輸入的身分證字號。</li>
<li>將身分證字號中代表出生縣市的英文代號依照附圖的方式轉換成數字。</li>
<li>將2.的數字的個位數字乘以9倍並加上十位數字。</li>
<li>將身分證字號的數字部分由左到右分別乘上8、7、6、5、4、3、2、1、1。</li>
<li>以3.與4.的和做為判斷標準。若能被10整除則輸出”real”，否則輸出”fake”。</li>
</ol>
<p>1.的部分需注意身份證字號的各數字之間沒有空格，若用整數型態的變數儲存會被讀取成一個整數。因此，這裡使用字元陣列讀取並儲存輸入的身分證字號。</p>
<p>2.就是單純的條件判斷，乍看之下需寫出26個英文字母各自的條件語句，但仔細觀察會發現有些英文字母的轉換是有規律的。我們可以善用這個規律化簡程式碼，將剛剛以字元型態讀取的英文代號先轉為<a href="https://noah-0831.github.io/a020-%E8%BA%AB%E5%88%86%E8%AD%89%E6%AA%A2%E9%A9%97/">ASCII碼</a>，再經由加減運算得到如附圖中的數字。</p>
<p>3.的關鍵在於分別取得數字的個位數和十位數。個位數可以用除10後取餘數的方式獲得，而十位數則因為在整數型態的運算中，若運算結果為小數，會自動無條件捨去至整數位，剛好等於除10後的商。</p>
<p>4.的部分，可以看到前8位數字的倍數呈規律遞減，因此可善用for迴圈得出，第9位再單獨加上去就好了。</p>
<p>5.就是單純的條件判斷並輸出相對應的輸出！</p>
<span id="more"></span>

<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>在進行資料型態的轉換時，會以「確保轉換過程中不會有資料遺失」為原則，因此若轉換後的資料型態所占的記憶體空間大於等於原資料型態，就可以直接轉換。以本題的程式碼來說，因為整數型態變數所佔的記憶體空間為4位元組，比字元型態變數所佔的1位元組還大，因此字元型態的變數在遇到需要用整數型態判別或運算的時候，會自動轉為整數，也就是其ASCII碼。嚴謹的寫法是 : (轉換後的的資料型態)變數名稱。 e.g. (int)city</p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//宣告並讀取字元型態變數city，代表身份證字號第一碼</span></span><br><span class="line">    <span class="comment">//宣告並讀取字元陣列num，代表身分證字號後9碼</span></span><br><span class="line">    <span class="type">char</span> city, num[<span class="number">10</span>]; </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c %s&quot;</span>, &amp;city, num);</span><br><span class="line">    <span class="comment">//根據身份證字號第一碼所對應的出生城市，將其轉為數字</span></span><br><span class="line">    <span class="keyword">if</span>(city &gt;= <span class="number">65</span> &amp;&amp; city &lt;= <span class="number">72</span>) </span><br><span class="line">        city-= <span class="number">55</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(city == <span class="string">&#x27;I&#x27;</span>)</span><br><span class="line">        city -= <span class="number">39</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(city &gt;= <span class="number">74</span> &amp;&amp; city &lt;= <span class="number">78</span>)</span><br><span class="line">        city -= <span class="number">56</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(city == <span class="string">&#x27;O&#x27;</span>)</span><br><span class="line">        city -= <span class="number">44</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(city &gt;= <span class="number">80</span> &amp;&amp; city &lt;= <span class="number">86</span>)</span><br><span class="line">        city -= <span class="number">57</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(city == <span class="string">&#x27;W&#x27;</span>)</span><br><span class="line">        city -= <span class="number">55</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(city == <span class="string">&#x27;X&#x27;</span> || city == <span class="string">&#x27;Y&#x27;</span>)</span><br><span class="line">        city -= <span class="number">58</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(city == <span class="string">&#x27;Z&#x27;</span>)</span><br><span class="line">        city -= <span class="number">57</span>;</span><br><span class="line">    <span class="comment">//將轉換後得出的數字，個位數字乘以9倍並加上十位數字</span></span><br><span class="line">    <span class="type">int</span> sum = city/<span class="number">10</span>+(city%<span class="number">10</span>)*<span class="number">9</span>;</span><br><span class="line">    <span class="comment">//將身分證字號的數字部分由左到右分別乘上8、7、6、5、4、3、2、1，最後再加上末碼</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">8</span> ; i++)</span><br><span class="line">        sum += (num[i]<span class="number">-48</span>)*(<span class="number">8</span>-i);</span><br><span class="line">    sum += num[<span class="number">8</span>]<span class="number">-48</span>;</span><br><span class="line">    <span class="comment">//若上述總和可被10整除就輸出real，否則輸出fake</span></span><br><span class="line">    <span class="keyword">if</span>(sum%<span class="number">10</span> == <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;real&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;fake&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>程式教學</category>
      </categories>
      <tags>
        <tag>C語言</tag>
      </tags>
  </entry>
  <entry>
    <title>a015. 矩陣的翻轉</title>
    <url>/a015-%E7%9F%A9%E9%99%A3%E7%9A%84%E7%BF%BB%E8%BD%89/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a015">https://zerojudge.tw/ShowProblem?problemid=a015</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>先使用scanf()函式讀取輸入的二維陣列後，將其行列互換再輸出。</p>
<span id="more"></span>

<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>根據題意，測資檔會包含多組測資，因此需使用「<a href="https://noah-0831.github.io/a004-%E6%96%87%E6%96%87%E7%9A%84%E6%B1%82%E5%A9%9A/">EOF</a>寫法」。所謂 EOF 並不是一種真實存在的字元，而是「End Of File」的縮寫，意思是一份檔案的結尾，也可以說是輸入的停止。通常程式在執行時會先讀取輸入，再依據輸入進行相對的行動，但我們未必能知道輸入有幾筆、到什麼時候結束，這時候我們就可以讓電腦自動偵測。一旦它偵測到EOF條件為True，即代表輸入停止，就會結束讀取輸入，如此我們的程式就不用事先指定輸入的筆數，可以不斷讀取輸入並執行直到輸入結束。</p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//宣告變數row、column，代表矩陣的行與列</span></span><br><span class="line">    <span class="type">int</span> row, column;</span><br><span class="line">    <span class="comment">//根據題意，測資檔會包含多組矩陣資料，因此使用EOF寫法判斷程式執行的條件</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;row, &amp;column) != EOF) &#123;</span><br><span class="line">        <span class="comment">//宣告並讀取二維陣列matrix</span></span><br><span class="line">        <span class="type">int</span> matrix[row][column];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; row ; i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span> ; j &lt; column ; j++)</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;matrix[i][j]);</span><br><span class="line">        <span class="comment">//將二維陣列行列互換後輸出</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span> ;j &lt; column ; j++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; row ; i++)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, matrix[i][j]);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>程式教學</category>
      </categories>
      <tags>
        <tag>C語言</tag>
      </tags>
  </entry>
  <entry>
    <title>Noah的小記1 創立 Codebar 程式酒吧 的初衷</title>
    <url>/Noah%E7%9A%84%E5%B0%8F%E8%A8%981%EF%BC%8D%E5%89%B5%E7%AB%8B%20Codebar%20%E7%A8%8B%E5%BC%8F%E9%85%92%E5%90%A7%20%E7%9A%84%E5%88%9D%E8%A1%B7/</url>
    <content><![CDATA[<p>從三年前第一次接觸程式，開始撰寫程式解題報告；到兩年前全心投入程式解題報告的編寫，並將內容公開上網；再到去年架設網站，並在今年將內容系統性的統整並上傳。三年來，不僅僅是技術的成長，也是心態上的突破。</p>
<p>一開始之所以會撰寫程式解題報告，是因為自己在學習程式的過程中遭遇的種種挫折。當時高三的我，在沒有任何基礎的情況下，僅憑著對程式的熱忱，毅然投入了進階程式設計課程。直到我開始在網路上尋找學習資源後，才發現坊間的素材雖多，卻多是以「幾天內學會」為目標的文章，因為過於壓縮內容，反而很難讓初學者理解。同時因為各個作者安排的進度不同，讀者不易從中途切入，往往需從頭看完整個系列教學，卻未必能得到想要的答案，也難以銜接其他參考資料。</p>
<p>因此，我把目光轉向實作導向的解題報告。解題報告既沒有順序性，也沒有進度安排，讀者可以依自己的步調決定學習的節奏，直面自己的問題並加以改善。可惜的是，當時的解題報告多以語法較簡潔Python為主，較少針對C語系。因此，在程式能力漸趨成熟後，我開始著手撰寫一份以初學者角度剖析題意，釐清解題思路，並轉化為程式碼的解題報告。或許我的程式能力並不是最強的，但正因為我曾有著這樣的經歷，更能理解初學者的想法，以及容易犯錯的地方。</p>
<p>過往我撰文時用的編輯器是HackMD，但隨著內容逐漸增加，我開始意識到系統性整理文章的的重要性，同時也希望拓展寫作的方向。因此才有了 Codebar 程式酒吧 的出現。未來 Codebar 程式酒吧 將會以提供各道程式題目的解題報告，以及一些活動的申請經歷與參與經驗為方向。希望藉由自己的力量，能幫助更多有相同經歷與需求的人。</p>
<p><strong>感謝 方珮雯 老師，幫助我建立程式概念，完成人生第一份程式解題報告。</strong><br><strong>感謝 M_SQRT 大，協助我程式解報告的改進，給了我繼續努力的動力。</strong><br><strong>感謝 不輕易滿足、不輕言放棄的 頑固的自己，兩年走來仍在路上</strong></p>
]]></content>
      <categories>
        <category>Noah的小記</category>
      </categories>
  </entry>
  <entry>
    <title>a013. 羅馬數字</title>
    <url>/a013-%E7%BE%85%E9%A6%AC%E6%95%B8%E5%AD%97/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a013">https://zerojudge.tw/ShowProblem?problemid=a013</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>本題希望我們寫出可以進行羅馬數字減法的程式。而由於電腦無法直接進行羅馬數字的運算，因此我們須先將輸入的兩組羅馬數字轉為阿拉伯數字，然後再進行運算，最後將運算後的結果再轉回羅馬數字輸出。</p>
<span id="more"></span>

<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>為了維持程式碼的簡潔與易讀性，本程式碼使用了<a href="https://mycollegenotebook.medium.com/%EF%BD%83%E8%AA%9E%E8%A8%80%E7%AD%86%E8%A8%98-%E5%87%BD%E5%BC%8F-functions-cea21d86560f">函式</a>宣告。在<a href="https://noah-0831.github.io/a002-%E7%B0%A1%E6%98%93%E5%8A%A0%E6%B3%95/">a002. 簡易加法</a>我們曾經提過，所謂函式，可以想成是「可重複使用的程式區塊」，因此宣告函式就意味著將主函式可能重複用到的程式碼直接寫在主函式外。如此一來當主函式需要用到時，只要呼叫函式較可以直接使用了。在宣告函式時，首先要確定這個函式要執行的功能是什麼，應該要回傳什麼型態的回傳值給主程式；再來要思考這個函式可能會需要用到哪些主程式的參數，將這些參數傳進函式裡，剩下的部分就和一般撰寫程式時差不多了。所以說不必因看到「函式宣告」而感到緊張，其實只是有些格式要注意而已！</p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="comment">//宣告回傳值為int型態的函式roman_to_arabic，將羅馬數字轉為阿拉伯數字</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">roman_to_arabic</span><span class="params">(<span class="type">char</span> roman[<span class="number">11</span>])</span> &#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>, arabic = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(roman[i] != <span class="string">&#x27;\0&#x27;</span> &amp;&amp; roman[i] != <span class="string">&#x27;\n&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">switch</span>(roman[i]) &#123;</span><br><span class="line">            <span class="comment">//若讀取到I，可能為I、IV或IX</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;I&#x27;</span>: &#123;</span><br><span class="line">                <span class="comment">//若I後面有V，則為IV，代表4</span></span><br><span class="line">                <span class="keyword">if</span>(roman[i+<span class="number">1</span>] == <span class="string">&#x27;V&#x27;</span>) &#123;</span><br><span class="line">                    arabic += <span class="number">4</span>;</span><br><span class="line">                    i += <span class="number">2</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//若I後面有X，則為IX，代表9</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(roman[i+<span class="number">1</span>] == <span class="string">&#x27;X&#x27;</span>) &#123;</span><br><span class="line">                    arabic += <span class="number">9</span>;</span><br><span class="line">                    i += <span class="number">2</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//若I後面既非V也非X，則為I，代表1</span></span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    arabic += <span class="number">1</span>;</span><br><span class="line">                    i++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//若讀取到V，因IV會先讀取到I，只可能為V，代表5</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;V&#x27;</span>: &#123;</span><br><span class="line">                arabic += <span class="number">5</span>;</span><br><span class="line">                i++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//若讀取到X，因IX會先讀取到I，只可能為X、XL或XC</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;X&#x27;</span>: &#123;</span><br><span class="line">                <span class="comment">//若X後面有L，則為XL，代表40</span></span><br><span class="line">                <span class="keyword">if</span>(roman[i+<span class="number">1</span>] == <span class="string">&#x27;L&#x27;</span>) &#123;</span><br><span class="line">                    arabic += <span class="number">40</span>;</span><br><span class="line">                    i += <span class="number">2</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//若X後面有C，則為XC，代表90</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(roman[i+<span class="number">1</span>] == <span class="string">&#x27;C&#x27;</span>) &#123;</span><br><span class="line">                    arabic += <span class="number">90</span>;</span><br><span class="line">                    i += <span class="number">2</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//若X後面既非L也非C，則為X，代表10</span></span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    arabic += <span class="number">10</span>;</span><br><span class="line">                    i++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//若讀取到L，因XL會先讀取到X，只可能為L，代表50</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;L&#x27;</span>: &#123;</span><br><span class="line">                arabic += <span class="number">50</span>;</span><br><span class="line">                i++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//若讀取到C，因XC會先讀取到X，只可能為C、CD或CM</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;C&#x27;</span>: &#123;</span><br><span class="line">                <span class="comment">//若C後面有D，則為CD，代表400</span></span><br><span class="line">                <span class="keyword">if</span>(roman[i+<span class="number">1</span>] == <span class="string">&#x27;D&#x27;</span>) &#123;</span><br><span class="line">                    arabic += <span class="number">400</span>;</span><br><span class="line">                    i += <span class="number">2</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//若C後面有M，則為CM，代表900</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(roman[i+<span class="number">1</span>] == <span class="string">&#x27;M&#x27;</span>) &#123;</span><br><span class="line">                    arabic += <span class="number">900</span>;</span><br><span class="line">                    i += <span class="number">2</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//若C後面既非D也非M，則為C，代表100</span></span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    arabic += <span class="number">100</span>;</span><br><span class="line">                    i++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//若讀取到D，因CD會先讀取到C，只可能為D，代表500</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;D&#x27;</span>: &#123;</span><br><span class="line">                arabic += <span class="number">500</span>;</span><br><span class="line">                i++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//若讀取到M，因CM會先讀取到C，只可能為M，代表1000</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;M&#x27;</span>: &#123;</span><br><span class="line">                arabic += <span class="number">1000</span>;</span><br><span class="line">                i++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//回傳轉換後的阿拉伯數字</span></span><br><span class="line">    <span class="keyword">return</span> arabic;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//宣告回傳值為void型態（不回傳）的函式arabic_to_roman，將阿拉伯數字轉為羅馬數字並輸出</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">arabic_to_roman</span><span class="params">(<span class="type">int</span> arabic)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="type">char</span> roman_temp[<span class="number">15</span>] = &#123;&#125;, roman[<span class="number">11</span>] = &#123;&#125;;</span><br><span class="line">    <span class="comment">//若數字大於等於1000，就用1000換成一個M</span></span><br><span class="line">    <span class="keyword">while</span>(arabic &gt;= <span class="number">1000</span>) &#123;</span><br><span class="line">        roman_temp[i] = <span class="string">&#x27;M&#x27;</span>;</span><br><span class="line">        arabic -=<span class="number">1000</span>;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//若數字大於等於500，就用500換成一個D</span></span><br><span class="line">    <span class="keyword">while</span>(arabic &gt;= <span class="number">500</span>) &#123;</span><br><span class="line">        roman_temp[i] = <span class="string">&#x27;D&#x27;</span>;</span><br><span class="line">        arabic -= <span class="number">500</span>;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//若數字大於等於100，就用100換成一個C</span></span><br><span class="line">    <span class="keyword">while</span>(arabic &gt;= <span class="number">100</span>) &#123;</span><br><span class="line">        roman_temp[i] = <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">        arabic -= <span class="number">100</span>;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//若數字大於等於50，就用50換成一個L</span></span><br><span class="line">    <span class="keyword">while</span>(arabic &gt;= <span class="number">50</span>) &#123;</span><br><span class="line">        roman_temp[i] = <span class="string">&#x27;L&#x27;</span>;</span><br><span class="line">        arabic -=<span class="number">50</span>;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//若數字大於等於10，就用10換成一個X</span></span><br><span class="line">    <span class="keyword">while</span>(arabic &gt;= <span class="number">10</span>) &#123;</span><br><span class="line">        roman_temp[i] = <span class="string">&#x27;X&#x27;</span>;</span><br><span class="line">        arabic -= <span class="number">10</span>;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//若數字大於等於5，就用5換成一個V</span></span><br><span class="line">    <span class="keyword">while</span>(arabic &gt;= <span class="number">5</span>) &#123;</span><br><span class="line">        roman_temp[i] = <span class="string">&#x27;V&#x27;</span>;</span><br><span class="line">        arabic -=<span class="number">5</span>;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//若數字大於等於1，就用1換成一個I</span></span><br><span class="line">    <span class="keyword">while</span>(arabic &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">        roman_temp[i] = <span class="string">&#x27;I&#x27;</span>;</span><br><span class="line">        arabic -= <span class="number">1</span>;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//檢查：在羅馬數字的表示法中，不會有4個相同符號並列，若有4格符號並列需用減法的思維重新記錄，比如4在羅馬數字的表示法中是記成XI而不是IIII</span></span><br><span class="line">    <span class="type">int</span> j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span> ; roman_temp[i] != <span class="string">&#x27;\0&#x27;</span> ; i++) &#123;</span><br><span class="line">        <span class="comment">//若有4個相同符號並列，先檢查是什麼符號，再決定如何轉換</span></span><br><span class="line">        <span class="keyword">if</span>(roman_temp[i] == roman_temp[i+<span class="number">1</span>] &amp;&amp; roman_temp[i+<span class="number">1</span>] == roman_temp[i+<span class="number">2</span>] &amp;&amp; roman_temp[i+<span class="number">2</span>] == roman_temp[i+<span class="number">3</span>]) &#123;</span><br><span class="line">            <span class="keyword">switch</span>(roman_temp[i]) &#123;</span><br><span class="line">                <span class="comment">//若為4個C，可能為DCCCC或CCCC</span></span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;C&#x27;</span>: &#123;</span><br><span class="line">                    <span class="comment">//若C前面為D，則為DCCCC，重新記為CM</span></span><br><span class="line">                    <span class="keyword">if</span>(roman_temp[i<span class="number">-1</span>] == <span class="string">&#x27;D&#x27;</span>) &#123;</span><br><span class="line">                        roman[j<span class="number">-1</span>] = <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">                        roman[j] = <span class="string">&#x27;M&#x27;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">//若C前面非D，則為CCCC，重新記為CD</span></span><br><span class="line">                    <span class="keyword">else</span> &#123;</span><br><span class="line">                        roman[j] = <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">                        roman[j+<span class="number">1</span>] = <span class="string">&#x27;D&#x27;</span>;</span><br><span class="line">                        j++;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//若為4個X，可能為LXXXX或XXXX</span></span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;X&#x27;</span>: &#123;</span><br><span class="line">                    <span class="comment">//若X前面為L，則為LXXXX，重新記為XC</span></span><br><span class="line">                    <span class="keyword">if</span>(roman_temp[i<span class="number">-1</span>] == <span class="string">&#x27;L&#x27;</span>) &#123;</span><br><span class="line">                        roman[j<span class="number">-1</span>] = <span class="string">&#x27;X&#x27;</span>;</span><br><span class="line">                        roman[j] = <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">//若X前面非L，則為XXXX，重新記為XL</span></span><br><span class="line">                    <span class="keyword">else</span> &#123;</span><br><span class="line">                        roman[j] = <span class="string">&#x27;X&#x27;</span>;</span><br><span class="line">                        roman[j+<span class="number">1</span>] = <span class="string">&#x27;L&#x27;</span>;</span><br><span class="line">                        j++;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//若為4個I，可能為VIIII或IIII</span></span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;I&#x27;</span>: &#123;</span><br><span class="line">                    <span class="comment">//若I前面為V，則為VIIII，重新記為IX</span></span><br><span class="line">                    <span class="keyword">if</span>(roman_temp[i<span class="number">-1</span>] == <span class="string">&#x27;V&#x27;</span>) &#123;</span><br><span class="line">                        roman[j<span class="number">-1</span>] = <span class="string">&#x27;I&#x27;</span>;</span><br><span class="line">                        roman[j] = <span class="string">&#x27;X&#x27;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">//若I前面非V，則為IIII，重新記為IV</span></span><br><span class="line">                    <span class="keyword">else</span> &#123;</span><br><span class="line">                        roman[j] = <span class="string">&#x27;I&#x27;</span>;</span><br><span class="line">                        roman[j+<span class="number">1</span>] = <span class="string">&#x27;V&#x27;</span>;</span><br><span class="line">                        j++;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//因為是4個相同的符號，檢查一個後，後面三個可直接略過</span></span><br><span class="line">            i += <span class="number">3</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//若無4個相同符號並列，直接照記即可</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            roman[j] = roman_temp[i];</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        j++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//輸出轉換後的羅馬數字</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, roman);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//主函式</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="comment">//先讀取第一個字串，若為#則終止輸入，若否則將此字串複製給roman_1</span></span><br><span class="line">        <span class="type">char</span> test[<span class="number">10</span>];</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, test);</span><br><span class="line">        <span class="keyword">if</span>(test[<span class="number">0</span>] == <span class="string">&#x27;#&#x27;</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="type">char</span> roman_1[<span class="number">11</span>] = &#123;&#125;, roman_2[<span class="number">11</span>] = &#123;&#125;;</span><br><span class="line">        <span class="built_in">strcpy</span>(roman_1, test);</span><br><span class="line">        <span class="comment">//再讀取第二個字串，將此字串存到roman_2</span></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, roman_2);</span><br><span class="line">        <span class="comment">//因電腦無法直接進行羅馬數字的計算，需先將羅馬數字轉為阿拉伯數字</span></span><br><span class="line">        <span class="type">int</span> arabic_1 = roman_to_arabic(roman_1), arabic_2 = roman_to_arabic(roman_2);</span><br><span class="line">        <span class="type">int</span> arabic_difference = <span class="built_in">abs</span>(arabic_1-arabic_2);</span><br><span class="line">        <span class="comment">//若相減後的差為零，則輸出「ZERO」*/</span></span><br><span class="line">        <span class="keyword">if</span>(arabic_difference == <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;ZERO\n&quot;</span>);</span><br><span class="line">        <span class="comment">//若差不為0，根據題意，需先將阿拉伯數字轉為羅馬數字再輸出</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            arabic_to_roman(arabic_difference);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>程式教學</category>
      </categories>
      <tags>
        <tag>C語言</tag>
      </tags>
  </entry>
  <entry>
    <title>a010. 因數分解</title>
    <url>/a010-%E5%9B%A0%E6%95%B8%E5%88%86%E8%A7%A3/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a010">https://zerojudge.tw/ShowProblem?problemid=a010</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>這題的關鍵是「因數分解」這四個字，背後所代表的計算過程。當我們在做因數分解的時候，會使用短除法，從最小的質數開始檢查。當遇到該數的因數時，就把該數除以此質數得到商數，然後再重複上述動作，直到確定商數已經不能再被此質數整除為止。重複上述動作直到商數剩下一為止，即完成因數分解。</p>
<span id="more"></span>

<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>在因數分解時，因數之間會以 * 隔開，但注意輸出結尾不會有 * 。因此，我們必須判斷甚麼時候輸出結束。而正如解題思路所說，因數分解到最後，商數會剩下一。因此，我們可以利用if條件句判斷，當商數不為一的時候再輸出 * 。</p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//宣告並讀取變數num，代表要進行因數分解的整數</span></span><br><span class="line">    <span class="type">int</span> num;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num);</span><br><span class="line">    <span class="comment">//用for迴圈跑2到自己本身的所有數字，檢查是否為因數</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> factor = <span class="number">2</span> ; factor &lt;= num ; factor++) &#123;</span><br><span class="line">        <span class="comment">//若可以整除，代表此數是因數，將其分解至得出質因數為止</span></span><br><span class="line">        <span class="keyword">if</span>(num%factor == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="type">int</span> power = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(num%factor == <span class="number">0</span>) &#123;</span><br><span class="line">                num /= factor;</span><br><span class="line">                power++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//若此質因數只有一次，直接輸出數字即可</span></span><br><span class="line">            <span class="keyword">if</span>(power == <span class="number">1</span>)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, factor);</span><br><span class="line">            <span class="comment">//若此質因數不只一次，需輸出共幾次方</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d^%d&quot;</span>, factor, power);</span><br><span class="line">            <span class="comment">//除了最後一位以外，每個質因數輸出後皆須加上*</span></span><br><span class="line">            <span class="keyword">if</span>(num != <span class="number">1</span>)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot; * &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>程式教學</category>
      </categories>
      <tags>
        <tag>C語言</tag>
      </tags>
  </entry>
  <entry>
    <title>a009. 解碼器</title>
    <url>/a009-%E8%A7%A3%E7%A2%BC%E5%99%A8/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a009">https://zerojudge.tw/ShowProblem?problemid=a009</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p><a href="https://web.fg.tp.edu.tw/~anny/ASCII_table.htm">ASCII碼</a>全名為「American Standard Code for Information Interchange」，中文為「美國信息交換標準代碼」。之所以會有這個代碼是因為電腦採用的是二進制，八進制、十進制的其他數字，或甚至英文字母，必須經由此代碼轉換為二進制後，電腦才能順利理解、顯示、運算。<br>以C語言來說，當電腦進行字元與整數的運算時，會自動將該字元轉為ASCII碼再與整數運算，運算完成後再轉成字元。因此，所謂「把明碼的每個字元加上某一個整數K而得到密碼的字元」，指的是將明碼所對應到的ASCII碼加上某一個整數K，再轉為字串得到密碼。</p>
<p>透過觀察範例輸入&#x2F;出可知，1經過轉換後會變成*，查表可得K值為-7。因此，我們先使用scanf()函式讀取輸入的明碼，存放到字元陣列arr，再將陣列內的元素逐一減七，就是題目所求的密碼了。</p>
<span id="more"></span>

<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>本題中使用了<a href="https://www.runoob.com/cprogramming/c-function-strlen.html">strlen()函式</a>取出字串長度。由於strlen()函式並非標準函式庫裡的函式，使用前須先引用 &lt;string.h&gt; 函式庫。</p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//以字元陣列的形式宣告，並以字串的形式讀取輸入的明碼</span></span><br><span class="line">    <span class="type">char</span> arr[<span class="number">1000</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, arr);</span><br><span class="line">    <span class="comment">//利用for迴圈，逐項將明碼轉為密碼</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; <span class="built_in">strlen</span>(arr) ; i++)</span><br><span class="line">        arr[i] = arr[i]<span class="number">-7</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, arr);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>程式教學</category>
      </categories>
      <tags>
        <tag>C語言</tag>
      </tags>
  </entry>
  <entry>
    <title>a006. 一元二次方程式</title>
    <url>/a006-%E4%B8%80%E5%85%83%E4%BA%8C%E6%AC%A1%E6%96%B9%E7%A8%8B%E5%BC%8F/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a006">https://zerojudge.tw/ShowProblem?problemid=a006</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>求一元二次方程式的根有多種方式，舉凡配方法、十字交乘等，而這裡採用的是<a href="https://www.youtube.com/watch?v=Z0omOUKCXcg&ab_channel=%E5%9D%87%E4%B8%80%E6%95%99%E8%82%B2%E5%B9%B3%E5%8F%B0JunyiAcademy">公式解</a>。若判別式 b<sup>2</sup>-4ac &gt; 0 ，代表此方程式有兩相異實根 (-b±√b<sup>2</sup>-4ac)&#x2F;2a ；若判別式 b<sup>2</sup>-4ac &#x3D; 0 ，代表此方程式有兩相同實根 (-b+√(b<sup>2</sup>-4ac))&#x2F;2a &#x3D; (-b-√(b<sup>2</sup>-4ac))&#x2F;2a ；若判別式 b<sup>2</sup>-4ac &lt; 0 ，代表此方程式沒有實根。</p>
<span id="more"></span>

<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>本題中使用了<a href="https://www.runoob.com/cprogramming/c-function-sqrt.html">sqrt()函式</a>表示根式寫法。由於sqrt()函式並非標準函式庫裡的函式，使用前須先引用 &lt;math.h&gt; 函式庫。</p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//宣告並讀取變數a、b、c，代表一元二次方程式的三個係數</span></span><br><span class="line">    <span class="type">int</span> a, b, c;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line">    <span class="comment">//宣告變數D，代表一元二次方程式的判別式</span></span><br><span class="line">    <span class="type">int</span> D = b*b<span class="number">-4</span>*a*c;</span><br><span class="line">    <span class="comment">//若判別式小於零，代表無實根存在</span></span><br><span class="line">    <span class="keyword">if</span>(D &lt; <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;No real root\n&quot;</span>);</span><br><span class="line">    <span class="comment">//若判別式大於等於零，代表有實根存在</span></span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="type">int</span> x1 = (-b+<span class="built_in">sqrt</span>(D))/(<span class="number">2</span>*a);</span><br><span class="line">        <span class="type">int</span> x2 = (-b-<span class="built_in">sqrt</span>(D))/(<span class="number">2</span>*a);</span><br><span class="line">        <span class="comment">//若判別式大於零，代表有兩相異實根</span></span><br><span class="line">        <span class="keyword">if</span>(D &gt; <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Two different roots x1=%d , x2=%d&quot;</span>, x1, x2);</span><br><span class="line">        <span class="comment">//若判別式等於零，代表有相同實根</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(D == <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Two same roots x=%d&quot;</span>, x1);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>程式教學</category>
      </categories>
      <tags>
        <tag>C語言</tag>
      </tags>
  </entry>
  <entry>
    <title>a005. Eva的回家作業</title>
    <url>/a005-Eva%E7%9A%84%E5%9B%9E%E5%AE%B6%E4%BD%9C%E6%A5%AD/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a005">https://zerojudge.tw/ShowProblem?problemid=a005</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>由題意可知輸入的數列只有等差數列或等比數列兩種可能，因此我們可以先用if_else條件句判斷輸入數列為等差數列還是等比數列，再依據等差數列兩相鄰項差相同、等比數列兩相鄰項比相同的性質推知第五項。</p>
<span id="more"></span>

<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>根據題意，測資檔會包含多組測資，因此可使用<a href="https://openhome.cc/Gossip/CGossip/forStatement.html">for迴圈</a>判斷程式執行的條件。</p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 宣告並讀取變數t，代表數列的數目</span></span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;t);</span><br><span class="line">    <span class="comment">// 使用for迴圈分別討論每一個數列的情況</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; t ; i++) &#123;</span><br><span class="line">        <span class="comment">// 宣告並讀取陣列a[4]，代表輸入數列的前四項</span></span><br><span class="line">        <span class="type">int</span> a[<span class="number">4</span>];</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d %d&quot;</span>, &amp;a[<span class="number">0</span>], &amp;a[<span class="number">1</span>], &amp;a[<span class="number">2</span>], &amp;a[<span class="number">3</span>]);</span><br><span class="line">        <span class="comment">// 若數列任兩項間的差相同，即為等差數列</span></span><br><span class="line">        <span class="keyword">if</span>(a[<span class="number">1</span>]-a[<span class="number">0</span>] == a[<span class="number">2</span>]-a[<span class="number">1</span>])</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d %d %d\n&quot;</span>, a[<span class="number">0</span>], a[<span class="number">1</span>], a[<span class="number">2</span>], a[<span class="number">3</span>], a[<span class="number">3</span>]+(a[<span class="number">1</span>]-a[<span class="number">0</span>]));</span><br><span class="line">        <span class="comment">// 若否，即為等比數列</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d %d %d\n&quot;</span>, a[<span class="number">0</span>], a[<span class="number">1</span>], a[<span class="number">2</span>], a[<span class="number">3</span>], a[<span class="number">3</span>]*(a[<span class="number">1</span>]/a[<span class="number">0</span>]));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>程式教學</category>
      </categories>
      <tags>
        <tag>C語言</tag>
      </tags>
  </entry>
  <entry>
    <title>a004. 文文的求婚</title>
    <url>/a004-%E6%96%87%E6%96%87%E7%9A%84%E6%B1%82%E5%A9%9A/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a004">https://zerojudge.tw/ShowProblem?problemid=a004</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>根據題意，西元年被4整除且不被100整除，或被400整除者即為閏年。因此，我們可以利用取餘數的方式判斷輸入的年份是否能被4、100和400整除，進而判斷其是否為閏年。</p>
<span id="more"></span>

<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>根據題意，測資檔會包含多組測資，因此需使用「EOF寫法」。所謂 EOF 並不是一種真實存在的字元，而是「End Of File」的縮寫，意思是一份檔案的結尾，也可以說是輸入的停止。通常程式在執行時會先讀取輸入，再依據輸入進行相對的行動，但我們未必能知道輸入有幾筆、到什麼時候結束，這時候我們就可以讓電腦自動偵測。一旦它偵測到EOF條件為True，即代表輸入停止，就會結束讀取輸入，如此我們的程式就不用事先指定輸入的筆數，可以不斷讀取輸入並執行直到輸入結束。</p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//宣告變數year，代表西元年</span></span><br><span class="line">    <span class="type">int</span> year;</span><br><span class="line">    <span class="comment">//使用EOF寫法判斷程式執行的條件</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;year) != EOF) &#123;</span><br><span class="line">        <span class="comment">//根據題意，西元年被4整除且不被100整除，或被400整除者即為閏年</span></span><br><span class="line">        <span class="keyword">if</span>(year%<span class="number">4</span> == <span class="number">0</span> &amp;&amp; year%<span class="number">100</span> != <span class="number">0</span> || year%<span class="number">400</span> == <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;閏年\n&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;平年\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程式教學</category>
      </categories>
      <tags>
        <tag>C語言</tag>
      </tags>
  </entry>
  <entry>
    <title>a003. 兩光法師占卜術</title>
    <url>/a003-%E5%85%A9%E5%85%89%E6%B3%95%E5%B8%AB%E5%8D%A0%E5%8D%9C%E8%A1%93/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a003">https://zerojudge.tw/ShowProblem?problemid=a003</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>先讀取出生月日，依據題意得到S值後，再依照S值輸出相對應的字串。</p>
<span id="more"></span>

<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p><a href="https://openhome.cc/Gossip/CppGossip/switchStatement.html">switch()條件句</a>是條件句之一。使用時，將想要判斷的數值或字元放在switch後面的括弧裡，並在case列出可能的情況，程式就會自動依據case指定的數字、字元或判斷句的情形，執行相對應的程式區塊。</p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//宣告變數M、D，分別表示月、日</span></span><br><span class="line">    <span class="type">int</span> M, D;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;M, &amp;D);</span><br><span class="line">    <span class="comment">//宣告變數S，依據題意賦值為(M*2+D)%3</span></span><br><span class="line">    <span class="type">int</span> S = (M*<span class="number">2</span>+D)%<span class="number">3</span>;</span><br><span class="line">    <span class="comment">//switch()條件句：依據S值輸出相對應的字串</span></span><br><span class="line">    <span class="keyword">switch</span> S:</span><br><span class="line">        <span class="comment">//若S值為0，輸出「普通」</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;普通&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="comment">//若S值為1，輸出「吉」</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;吉&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="comment">//若S值為2，輸出「大吉」</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;大吉&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>程式教學</category>
      </categories>
      <tags>
        <tag>C語言</tag>
      </tags>
  </entry>
  <entry>
    <title>a002. 簡易加法</title>
    <url>/a002-%E7%B0%A1%E6%98%93%E5%8A%A0%E6%B3%95/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a002">https://zerojudge.tw/ShowProblem?problemid=a002</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>先使用scanf()函式讀取輸入的兩個數字，再使用printf()函式輸出兩數和。</p>
<span id="more"></span>

<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>在<a href="https://noah-0831.github.io/a001-%E5%93%88%E5%9B%89/">a001. 哈囉</a>的文章中，我們曾討論過讀取輸入時應注意的事項。在這裡我們想分享給大家另一個初學者可能不太清楚的東西，也就是回傳值和return 0。</p>
<p>在進入正題之前，我們必須先知道什麼是「函式」。函式又稱為函數，之所以會有這兩種說法，就是因為在程式上的函式，和數學上的函數是很接近的概念。在數學上，函數是一種對應關係，可以將給定的x轉為相對應的y；在程式上，函式是一段能執行特定功能的程式碼區塊，可以在讀取所需的參數後，回傳程式執行後的結果。而這個回傳的寫法，在C語言裡就寫作”return”，其回傳的結果叫做「回傳值」，其資料型態可以透過函式前面得知。</p>
<p>或許你會覺得身為初學者，函式是比較進階的概念，但事實是我們已經在不知不覺中使用它了。在寫一段C語言的程式時，我們通常會在前面先寫上int main() {}，再將程式碼寫在大括弧之內。這個main()其實就是一種函式，中文名稱叫做「主函式」，代表這個程式檔主要的程式區塊。也因此，通常大部分的程式都會寫在main()函式裡面。而既然main()是函式的一種，當然也有回傳值。不過作為最特殊的函式之一，main()函式的回傳值有固定的寫法。若回傳值為0，代表這段程式順利結束；若回傳值為1，代表程式在執行的過程出了差錯，未能順利結束。這也是為什麼我們都會在程式後面加上return 0。</p>
<p>值得注意的是，因為return 0是固定的寫法，所以現在許多較新的編譯器，無論是否讀取到return 0，都會默認main()函式回傳值0，換句話說就是不用在手動打上return 0了。不過畢竟不能保證所有編譯器都支援這種人性化的功能，建議各位還是要養成打上return 0的好習慣。</p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a+b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>程式教學</category>
      </categories>
      <tags>
        <tag>C語言</tag>
      </tags>
  </entry>
  <entry>
    <title>a001. 哈囉</title>
    <url>/a001-%E5%93%88%E5%9B%89/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a001">https://zerojudge.tw/ShowProblem?problemid=a001</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>先使用scanf()函式讀取輸入的字串，再使用printf()函式輸出相對應的字串。</p>
<span id="more"></span>

<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>大家或許已經注意到了，有時scanf()函式的變數名稱後面會加上&amp;，有時卻不會，這其實與變數的型態有關。變數依據宣告的位置，可分為全域變數與區域變數。全域變數是宣告在主程式，或甚至主程式之外的變數，可以在所有地方存取或修改值；區域變數是在特定程式區塊，如迴圈或函式等內部宣告的變數，只能在其宣告的程式區塊以內使用。若是其他程式區塊也需使用此變數，必須在變數名稱前加&amp;，表示取得這個變數的位址，進而使用此變數。</p>
<p>以scanf()函式來說，因為其所使用的變數並未在在函式內宣告，屬於區域變數，因此使用時通常須在變數名稱前加&amp;，也就是指定變數的位址作為儲存空間來存放輸入。但在所有資料型態中，字串是特例，因為字串在C語言裡就是以空字元\0結尾的字元陣列，而陣列名稱具有<a href="https://mycollegenotebook.medium.com/c%E8%AA%9E%E8%A8%80%E7%AD%86%E8%A8%98-%E6%8C%87%E6%A8%99-pointers-d28edcdd6283">「指標」</a>性質，也就是說其名稱會指向存放變數的記憶體位置，因此前面不需要加&amp;。當然有關指標的部分算是進階內容了，有興趣的人可以自行上網搜尋相關內容，初學者只需要記得讀取字串時不須加上&amp;，當作一種固定的寫法即可。至於其他資料型態的符號可以參考下表：</p>
<p><img src="https://i.imgur.com/2DXPY8W.png"></p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">char</span> arr[<span class="number">100</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, arr);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;hello, %s\n&quot;</span>, arr);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>程式教學</category>
      </categories>
      <tags>
        <tag>C語言</tag>
      </tags>
  </entry>
</search>
